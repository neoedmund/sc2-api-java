// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2clientprotocol/data.proto

package SC2APIProtocol;

public final class Data {
  private Data() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code SC2APIProtocol.Attribute}
   */
  public enum Attribute
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Light = 1;</code>
     */
    Light(1),
    /**
     * <code>Armored = 2;</code>
     */
    Armored(2),
    /**
     * <code>Biological = 3;</code>
     */
    Biological(3),
    /**
     * <code>Mechanical = 4;</code>
     */
    Mechanical(4),
    /**
     * <code>Robotic = 5;</code>
     */
    Robotic(5),
    /**
     * <code>Psionic = 6;</code>
     */
    Psionic(6),
    /**
     * <code>Massive = 7;</code>
     */
    Massive(7),
    /**
     * <code>Structure = 8;</code>
     */
    Structure(8),
    /**
     * <code>Hover = 9;</code>
     */
    Hover(9),
    /**
     * <code>Heroic = 10;</code>
     */
    Heroic(10),
    /**
     * <code>Summoned = 11;</code>
     */
    Summoned(11),
    ;

    /**
     * <code>Light = 1;</code>
     */
    public static final int Light_VALUE = 1;
    /**
     * <code>Armored = 2;</code>
     */
    public static final int Armored_VALUE = 2;
    /**
     * <code>Biological = 3;</code>
     */
    public static final int Biological_VALUE = 3;
    /**
     * <code>Mechanical = 4;</code>
     */
    public static final int Mechanical_VALUE = 4;
    /**
     * <code>Robotic = 5;</code>
     */
    public static final int Robotic_VALUE = 5;
    /**
     * <code>Psionic = 6;</code>
     */
    public static final int Psionic_VALUE = 6;
    /**
     * <code>Massive = 7;</code>
     */
    public static final int Massive_VALUE = 7;
    /**
     * <code>Structure = 8;</code>
     */
    public static final int Structure_VALUE = 8;
    /**
     * <code>Hover = 9;</code>
     */
    public static final int Hover_VALUE = 9;
    /**
     * <code>Heroic = 10;</code>
     */
    public static final int Heroic_VALUE = 10;
    /**
     * <code>Summoned = 11;</code>
     */
    public static final int Summoned_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Attribute valueOf(int value) {
      return forNumber(value);
    }

    public static Attribute forNumber(int value) {
      switch (value) {
        case 1: return Light;
        case 2: return Armored;
        case 3: return Biological;
        case 4: return Mechanical;
        case 5: return Robotic;
        case 6: return Psionic;
        case 7: return Massive;
        case 8: return Structure;
        case 9: return Hover;
        case 10: return Heroic;
        case 11: return Summoned;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Attribute>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Attribute> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Attribute>() {
            public Attribute findValueByNumber(int number) {
              return Attribute.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SC2APIProtocol.Data.getDescriptor().getEnumTypes().get(0);
    }

    private static final Attribute[] VALUES = values();

    public static Attribute valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Attribute(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SC2APIProtocol.Attribute)
  }

  public interface AbilityDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.AbilityData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 ability_id = 1;</code>
     */
    boolean hasAbilityId();
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 ability_id = 1;</code>
     */
    int getAbilityId();

    /**
     * <pre>
     * Catalog name of the ability.
     * </pre>
     *
     * <code>optional string link_name = 2;</code>
     */
    boolean hasLinkName();
    /**
     * <pre>
     * Catalog name of the ability.
     * </pre>
     *
     * <code>optional string link_name = 2;</code>
     */
    java.lang.String getLinkName();
    /**
     * <pre>
     * Catalog name of the ability.
     * </pre>
     *
     * <code>optional string link_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getLinkNameBytes();

    /**
     * <pre>
     * Catalog index of the ability.
     * </pre>
     *
     * <code>optional uint32 link_index = 3;</code>
     */
    boolean hasLinkIndex();
    /**
     * <pre>
     * Catalog index of the ability.
     * </pre>
     *
     * <code>optional uint32 link_index = 3;</code>
     */
    int getLinkIndex();

    /**
     * <pre>
     * Name used for the command card. May not always be set.
     * </pre>
     *
     * <code>optional string button_name = 4;</code>
     */
    boolean hasButtonName();
    /**
     * <pre>
     * Name used for the command card. May not always be set.
     * </pre>
     *
     * <code>optional string button_name = 4;</code>
     */
    java.lang.String getButtonName();
    /**
     * <pre>
     * Name used for the command card. May not always be set.
     * </pre>
     *
     * <code>optional string button_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getButtonNameBytes();

    /**
     * <pre>
     * A human friendly name when the button name or link name isn't descriptive.
     * </pre>
     *
     * <code>optional string friendly_name = 5;</code>
     */
    boolean hasFriendlyName();
    /**
     * <pre>
     * A human friendly name when the button name or link name isn't descriptive.
     * </pre>
     *
     * <code>optional string friendly_name = 5;</code>
     */
    java.lang.String getFriendlyName();
    /**
     * <pre>
     * A human friendly name when the button name or link name isn't descriptive.
     * </pre>
     *
     * <code>optional string friendly_name = 5;</code>
     */
    com.google.protobuf.ByteString
        getFriendlyNameBytes();

    /**
     * <pre>
     * Hotkey. May not always be set.
     * </pre>
     *
     * <code>optional string hotkey = 6;</code>
     */
    boolean hasHotkey();
    /**
     * <pre>
     * Hotkey. May not always be set.
     * </pre>
     *
     * <code>optional string hotkey = 6;</code>
     */
    java.lang.String getHotkey();
    /**
     * <pre>
     * Hotkey. May not always be set.
     * </pre>
     *
     * <code>optional string hotkey = 6;</code>
     */
    com.google.protobuf.ByteString
        getHotkeyBytes();

    /**
     * <pre>
     * This ability id may be represented by the given more generic id.
     * </pre>
     *
     * <code>optional uint32 remaps_to_ability_id = 7;</code>
     */
    boolean hasRemapsToAbilityId();
    /**
     * <pre>
     * This ability id may be represented by the given more generic id.
     * </pre>
     *
     * <code>optional uint32 remaps_to_ability_id = 7;</code>
     */
    int getRemapsToAbilityId();

    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 8;</code>
     */
    boolean hasAvailable();
    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 8;</code>
     */
    boolean getAvailable();

    /**
     * <pre>
     * Determines if a point is optional or required.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
     */
    boolean hasTarget();
    /**
     * <pre>
     * Determines if a point is optional or required.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
     */
    SC2APIProtocol.Data.AbilityData.Target getTarget();

    /**
     * <pre>
     * Can be cast in the minimap.
     * </pre>
     *
     * <code>optional bool allow_minimap = 10;</code>
     */
    boolean hasAllowMinimap();
    /**
     * <pre>
     * Can be cast in the minimap.
     * </pre>
     *
     * <code>optional bool allow_minimap = 10;</code>
     */
    boolean getAllowMinimap();

    /**
     * <pre>
     * Autocast can be set.
     * </pre>
     *
     * <code>optional bool allow_autocast = 11;</code>
     */
    boolean hasAllowAutocast();
    /**
     * <pre>
     * Autocast can be set.
     * </pre>
     *
     * <code>optional bool allow_autocast = 11;</code>
     */
    boolean getAllowAutocast();

    /**
     * <pre>
     * Requires placement to construct a building.
     * </pre>
     *
     * <code>optional bool is_building = 12;</code>
     */
    boolean hasIsBuilding();
    /**
     * <pre>
     * Requires placement to construct a building.
     * </pre>
     *
     * <code>optional bool is_building = 12;</code>
     */
    boolean getIsBuilding();

    /**
     * <pre>
     * Estimation of the footprint size. Need a better footprint.
     * </pre>
     *
     * <code>optional float footprint_radius = 13;</code>
     */
    boolean hasFootprintRadius();
    /**
     * <pre>
     * Estimation of the footprint size. Need a better footprint.
     * </pre>
     *
     * <code>optional float footprint_radius = 13;</code>
     */
    float getFootprintRadius();

    /**
     * <pre>
     * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
     * </pre>
     *
     * <code>optional bool is_instant_placement = 14;</code>
     */
    boolean hasIsInstantPlacement();
    /**
     * <pre>
     * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
     * </pre>
     *
     * <code>optional bool is_instant_placement = 14;</code>
     */
    boolean getIsInstantPlacement();

    /**
     * <pre>
     * Range unit can cast ability without needing to approach target.
     * </pre>
     *
     * <code>optional float cast_range = 15;</code>
     */
    boolean hasCastRange();
    /**
     * <pre>
     * Range unit can cast ability without needing to approach target.
     * </pre>
     *
     * <code>optional float cast_range = 15;</code>
     */
    float getCastRange();
  }
  /**
   * <pre>
   * May not relevant: queueable (everything is queueable).
   * May not be important: AbilSetId - marine stim, marauder stim.
   * Stuff omitted: transient.
   * Stuff that may be important: cost, range, Alignment, targetfilters.
   * </pre>
   *
   * Protobuf type {@code SC2APIProtocol.AbilityData}
   */
  public  static final class AbilityData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.AbilityData)
      AbilityDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AbilityData.newBuilder() to construct.
    private AbilityData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AbilityData() {
      abilityId_ = 0;
      linkName_ = "";
      linkIndex_ = 0;
      buttonName_ = "";
      friendlyName_ = "";
      hotkey_ = "";
      remapsToAbilityId_ = 0;
      available_ = false;
      target_ = 1;
      allowMinimap_ = false;
      allowAutocast_ = false;
      isBuilding_ = false;
      footprintRadius_ = 0F;
      isInstantPlacement_ = false;
      castRange_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AbilityData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              abilityId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              linkName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              linkIndex_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              buttonName_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              friendlyName_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              hotkey_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              remapsToAbilityId_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              available_ = input.readBool();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              SC2APIProtocol.Data.AbilityData.Target value = SC2APIProtocol.Data.AbilityData.Target.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                target_ = rawValue;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              allowMinimap_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              allowAutocast_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isBuilding_ = input.readBool();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              footprintRadius_ = input.readFloat();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              isInstantPlacement_ = input.readBool();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              castRange_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_AbilityData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_AbilityData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.AbilityData.class, SC2APIProtocol.Data.AbilityData.Builder.class);
    }

    /**
     * Protobuf enum {@code SC2APIProtocol.AbilityData.Target}
     */
    public enum Target
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Does not require a target.
       * </pre>
       *
       * <code>None = 1;</code>
       */
      None(1),
      /**
       * <pre>
       * Requires a target position.
       * </pre>
       *
       * <code>Point = 2;</code>
       */
      Point(2),
      /**
       * <pre>
       * Requires a unit to target. Given by position using feature layers.
       * </pre>
       *
       * <code>Unit = 3;</code>
       */
      Unit(3),
      /**
       * <pre>
       * Requires either a target point or target unit.
       * </pre>
       *
       * <code>PointOrUnit = 4;</code>
       */
      PointOrUnit(4),
      /**
       * <pre>
       * Requires either a target point or no target. (eg. building add-ons)
       * </pre>
       *
       * <code>PointOrNone = 5;</code>
       */
      PointOrNone(5),
      ;

      /**
       * <pre>
       * Does not require a target.
       * </pre>
       *
       * <code>None = 1;</code>
       */
      public static final int None_VALUE = 1;
      /**
       * <pre>
       * Requires a target position.
       * </pre>
       *
       * <code>Point = 2;</code>
       */
      public static final int Point_VALUE = 2;
      /**
       * <pre>
       * Requires a unit to target. Given by position using feature layers.
       * </pre>
       *
       * <code>Unit = 3;</code>
       */
      public static final int Unit_VALUE = 3;
      /**
       * <pre>
       * Requires either a target point or target unit.
       * </pre>
       *
       * <code>PointOrUnit = 4;</code>
       */
      public static final int PointOrUnit_VALUE = 4;
      /**
       * <pre>
       * Requires either a target point or no target. (eg. building add-ons)
       * </pre>
       *
       * <code>PointOrNone = 5;</code>
       */
      public static final int PointOrNone_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Target valueOf(int value) {
        return forNumber(value);
      }

      public static Target forNumber(int value) {
        switch (value) {
          case 1: return None;
          case 2: return Point;
          case 3: return Unit;
          case 4: return PointOrUnit;
          case 5: return PointOrNone;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Target>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Target> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Target>() {
              public Target findValueByNumber(int number) {
                return Target.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SC2APIProtocol.Data.AbilityData.getDescriptor().getEnumTypes().get(0);
      }

      private static final Target[] VALUES = values();

      public static Target valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Target(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SC2APIProtocol.AbilityData.Target)
    }

    private int bitField0_;
    public static final int ABILITY_ID_FIELD_NUMBER = 1;
    private int abilityId_;
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 ability_id = 1;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 ability_id = 1;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    public static final int LINK_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object linkName_;
    /**
     * <pre>
     * Catalog name of the ability.
     * </pre>
     *
     * <code>optional string link_name = 2;</code>
     */
    public boolean hasLinkName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Catalog name of the ability.
     * </pre>
     *
     * <code>optional string link_name = 2;</code>
     */
    public java.lang.String getLinkName() {
      java.lang.Object ref = linkName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          linkName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Catalog name of the ability.
     * </pre>
     *
     * <code>optional string link_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLinkNameBytes() {
      java.lang.Object ref = linkName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        linkName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINK_INDEX_FIELD_NUMBER = 3;
    private int linkIndex_;
    /**
     * <pre>
     * Catalog index of the ability.
     * </pre>
     *
     * <code>optional uint32 link_index = 3;</code>
     */
    public boolean hasLinkIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Catalog index of the ability.
     * </pre>
     *
     * <code>optional uint32 link_index = 3;</code>
     */
    public int getLinkIndex() {
      return linkIndex_;
    }

    public static final int BUTTON_NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object buttonName_;
    /**
     * <pre>
     * Name used for the command card. May not always be set.
     * </pre>
     *
     * <code>optional string button_name = 4;</code>
     */
    public boolean hasButtonName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Name used for the command card. May not always be set.
     * </pre>
     *
     * <code>optional string button_name = 4;</code>
     */
    public java.lang.String getButtonName() {
      java.lang.Object ref = buttonName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          buttonName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name used for the command card. May not always be set.
     * </pre>
     *
     * <code>optional string button_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getButtonNameBytes() {
      java.lang.Object ref = buttonName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        buttonName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FRIENDLY_NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object friendlyName_;
    /**
     * <pre>
     * A human friendly name when the button name or link name isn't descriptive.
     * </pre>
     *
     * <code>optional string friendly_name = 5;</code>
     */
    public boolean hasFriendlyName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * A human friendly name when the button name or link name isn't descriptive.
     * </pre>
     *
     * <code>optional string friendly_name = 5;</code>
     */
    public java.lang.String getFriendlyName() {
      java.lang.Object ref = friendlyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          friendlyName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * A human friendly name when the button name or link name isn't descriptive.
     * </pre>
     *
     * <code>optional string friendly_name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFriendlyNameBytes() {
      java.lang.Object ref = friendlyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        friendlyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOTKEY_FIELD_NUMBER = 6;
    private volatile java.lang.Object hotkey_;
    /**
     * <pre>
     * Hotkey. May not always be set.
     * </pre>
     *
     * <code>optional string hotkey = 6;</code>
     */
    public boolean hasHotkey() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Hotkey. May not always be set.
     * </pre>
     *
     * <code>optional string hotkey = 6;</code>
     */
    public java.lang.String getHotkey() {
      java.lang.Object ref = hotkey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hotkey_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Hotkey. May not always be set.
     * </pre>
     *
     * <code>optional string hotkey = 6;</code>
     */
    public com.google.protobuf.ByteString
        getHotkeyBytes() {
      java.lang.Object ref = hotkey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hotkey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REMAPS_TO_ABILITY_ID_FIELD_NUMBER = 7;
    private int remapsToAbilityId_;
    /**
     * <pre>
     * This ability id may be represented by the given more generic id.
     * </pre>
     *
     * <code>optional uint32 remaps_to_ability_id = 7;</code>
     */
    public boolean hasRemapsToAbilityId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * This ability id may be represented by the given more generic id.
     * </pre>
     *
     * <code>optional uint32 remaps_to_ability_id = 7;</code>
     */
    public int getRemapsToAbilityId() {
      return remapsToAbilityId_;
    }

    public static final int AVAILABLE_FIELD_NUMBER = 8;
    private boolean available_;
    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 8;</code>
     */
    public boolean hasAvailable() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 8;</code>
     */
    public boolean getAvailable() {
      return available_;
    }

    public static final int TARGET_FIELD_NUMBER = 9;
    private int target_;
    /**
     * <pre>
     * Determines if a point is optional or required.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
     */
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Determines if a point is optional or required.
     * </pre>
     *
     * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
     */
    public SC2APIProtocol.Data.AbilityData.Target getTarget() {
      @SuppressWarnings("deprecation")
      SC2APIProtocol.Data.AbilityData.Target result = SC2APIProtocol.Data.AbilityData.Target.valueOf(target_);
      return result == null ? SC2APIProtocol.Data.AbilityData.Target.None : result;
    }

    public static final int ALLOW_MINIMAP_FIELD_NUMBER = 10;
    private boolean allowMinimap_;
    /**
     * <pre>
     * Can be cast in the minimap.
     * </pre>
     *
     * <code>optional bool allow_minimap = 10;</code>
     */
    public boolean hasAllowMinimap() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * Can be cast in the minimap.
     * </pre>
     *
     * <code>optional bool allow_minimap = 10;</code>
     */
    public boolean getAllowMinimap() {
      return allowMinimap_;
    }

    public static final int ALLOW_AUTOCAST_FIELD_NUMBER = 11;
    private boolean allowAutocast_;
    /**
     * <pre>
     * Autocast can be set.
     * </pre>
     *
     * <code>optional bool allow_autocast = 11;</code>
     */
    public boolean hasAllowAutocast() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * Autocast can be set.
     * </pre>
     *
     * <code>optional bool allow_autocast = 11;</code>
     */
    public boolean getAllowAutocast() {
      return allowAutocast_;
    }

    public static final int IS_BUILDING_FIELD_NUMBER = 12;
    private boolean isBuilding_;
    /**
     * <pre>
     * Requires placement to construct a building.
     * </pre>
     *
     * <code>optional bool is_building = 12;</code>
     */
    public boolean hasIsBuilding() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Requires placement to construct a building.
     * </pre>
     *
     * <code>optional bool is_building = 12;</code>
     */
    public boolean getIsBuilding() {
      return isBuilding_;
    }

    public static final int FOOTPRINT_RADIUS_FIELD_NUMBER = 13;
    private float footprintRadius_;
    /**
     * <pre>
     * Estimation of the footprint size. Need a better footprint.
     * </pre>
     *
     * <code>optional float footprint_radius = 13;</code>
     */
    public boolean hasFootprintRadius() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * Estimation of the footprint size. Need a better footprint.
     * </pre>
     *
     * <code>optional float footprint_radius = 13;</code>
     */
    public float getFootprintRadius() {
      return footprintRadius_;
    }

    public static final int IS_INSTANT_PLACEMENT_FIELD_NUMBER = 14;
    private boolean isInstantPlacement_;
    /**
     * <pre>
     * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
     * </pre>
     *
     * <code>optional bool is_instant_placement = 14;</code>
     */
    public boolean hasIsInstantPlacement() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
     * </pre>
     *
     * <code>optional bool is_instant_placement = 14;</code>
     */
    public boolean getIsInstantPlacement() {
      return isInstantPlacement_;
    }

    public static final int CAST_RANGE_FIELD_NUMBER = 15;
    private float castRange_;
    /**
     * <pre>
     * Range unit can cast ability without needing to approach target.
     * </pre>
     *
     * <code>optional float cast_range = 15;</code>
     */
    public boolean hasCastRange() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * Range unit can cast ability without needing to approach target.
     * </pre>
     *
     * <code>optional float cast_range = 15;</code>
     */
    public float getCastRange() {
      return castRange_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, abilityId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, linkName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, linkIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, buttonName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, friendlyName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, hotkey_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, remapsToAbilityId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, available_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, target_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, allowMinimap_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, allowAutocast_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isBuilding_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, footprintRadius_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, isInstantPlacement_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, castRange_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, abilityId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, linkName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, linkIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, buttonName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, friendlyName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, hotkey_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, remapsToAbilityId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, available_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, target_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, allowMinimap_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, allowAutocast_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isBuilding_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, footprintRadius_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, isInstantPlacement_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, castRange_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.AbilityData)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.AbilityData other = (SC2APIProtocol.Data.AbilityData) obj;

      boolean result = true;
      result = result && (hasAbilityId() == other.hasAbilityId());
      if (hasAbilityId()) {
        result = result && (getAbilityId()
            == other.getAbilityId());
      }
      result = result && (hasLinkName() == other.hasLinkName());
      if (hasLinkName()) {
        result = result && getLinkName()
            .equals(other.getLinkName());
      }
      result = result && (hasLinkIndex() == other.hasLinkIndex());
      if (hasLinkIndex()) {
        result = result && (getLinkIndex()
            == other.getLinkIndex());
      }
      result = result && (hasButtonName() == other.hasButtonName());
      if (hasButtonName()) {
        result = result && getButtonName()
            .equals(other.getButtonName());
      }
      result = result && (hasFriendlyName() == other.hasFriendlyName());
      if (hasFriendlyName()) {
        result = result && getFriendlyName()
            .equals(other.getFriendlyName());
      }
      result = result && (hasHotkey() == other.hasHotkey());
      if (hasHotkey()) {
        result = result && getHotkey()
            .equals(other.getHotkey());
      }
      result = result && (hasRemapsToAbilityId() == other.hasRemapsToAbilityId());
      if (hasRemapsToAbilityId()) {
        result = result && (getRemapsToAbilityId()
            == other.getRemapsToAbilityId());
      }
      result = result && (hasAvailable() == other.hasAvailable());
      if (hasAvailable()) {
        result = result && (getAvailable()
            == other.getAvailable());
      }
      result = result && (hasTarget() == other.hasTarget());
      if (hasTarget()) {
        result = result && target_ == other.target_;
      }
      result = result && (hasAllowMinimap() == other.hasAllowMinimap());
      if (hasAllowMinimap()) {
        result = result && (getAllowMinimap()
            == other.getAllowMinimap());
      }
      result = result && (hasAllowAutocast() == other.hasAllowAutocast());
      if (hasAllowAutocast()) {
        result = result && (getAllowAutocast()
            == other.getAllowAutocast());
      }
      result = result && (hasIsBuilding() == other.hasIsBuilding());
      if (hasIsBuilding()) {
        result = result && (getIsBuilding()
            == other.getIsBuilding());
      }
      result = result && (hasFootprintRadius() == other.hasFootprintRadius());
      if (hasFootprintRadius()) {
        result = result && (
            java.lang.Float.floatToIntBits(getFootprintRadius())
            == java.lang.Float.floatToIntBits(
                other.getFootprintRadius()));
      }
      result = result && (hasIsInstantPlacement() == other.hasIsInstantPlacement());
      if (hasIsInstantPlacement()) {
        result = result && (getIsInstantPlacement()
            == other.getIsInstantPlacement());
      }
      result = result && (hasCastRange() == other.hasCastRange());
      if (hasCastRange()) {
        result = result && (
            java.lang.Float.floatToIntBits(getCastRange())
            == java.lang.Float.floatToIntBits(
                other.getCastRange()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAbilityId()) {
        hash = (37 * hash) + ABILITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAbilityId();
      }
      if (hasLinkName()) {
        hash = (37 * hash) + LINK_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLinkName().hashCode();
      }
      if (hasLinkIndex()) {
        hash = (37 * hash) + LINK_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getLinkIndex();
      }
      if (hasButtonName()) {
        hash = (37 * hash) + BUTTON_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getButtonName().hashCode();
      }
      if (hasFriendlyName()) {
        hash = (37 * hash) + FRIENDLY_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFriendlyName().hashCode();
      }
      if (hasHotkey()) {
        hash = (37 * hash) + HOTKEY_FIELD_NUMBER;
        hash = (53 * hash) + getHotkey().hashCode();
      }
      if (hasRemapsToAbilityId()) {
        hash = (37 * hash) + REMAPS_TO_ABILITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRemapsToAbilityId();
      }
      if (hasAvailable()) {
        hash = (37 * hash) + AVAILABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAvailable());
      }
      if (hasTarget()) {
        hash = (37 * hash) + TARGET_FIELD_NUMBER;
        hash = (53 * hash) + target_;
      }
      if (hasAllowMinimap()) {
        hash = (37 * hash) + ALLOW_MINIMAP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAllowMinimap());
      }
      if (hasAllowAutocast()) {
        hash = (37 * hash) + ALLOW_AUTOCAST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAllowAutocast());
      }
      if (hasIsBuilding()) {
        hash = (37 * hash) + IS_BUILDING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsBuilding());
      }
      if (hasFootprintRadius()) {
        hash = (37 * hash) + FOOTPRINT_RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFootprintRadius());
      }
      if (hasIsInstantPlacement()) {
        hash = (37 * hash) + IS_INSTANT_PLACEMENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsInstantPlacement());
      }
      if (hasCastRange()) {
        hash = (37 * hash) + CAST_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getCastRange());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.AbilityData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.AbilityData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.AbilityData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.AbilityData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.AbilityData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * May not relevant: queueable (everything is queueable).
     * May not be important: AbilSetId - marine stim, marauder stim.
     * Stuff omitted: transient.
     * Stuff that may be important: cost, range, Alignment, targetfilters.
     * </pre>
     *
     * Protobuf type {@code SC2APIProtocol.AbilityData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.AbilityData)
        SC2APIProtocol.Data.AbilityDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_AbilityData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_AbilityData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.AbilityData.class, SC2APIProtocol.Data.AbilityData.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.AbilityData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        linkName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        linkIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        buttonName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        friendlyName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        hotkey_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        remapsToAbilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        available_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        target_ = 1;
        bitField0_ = (bitField0_ & ~0x00000100);
        allowMinimap_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        allowAutocast_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        isBuilding_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        footprintRadius_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        isInstantPlacement_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        castRange_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_AbilityData_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.AbilityData getDefaultInstanceForType() {
        return SC2APIProtocol.Data.AbilityData.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.AbilityData build() {
        SC2APIProtocol.Data.AbilityData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.AbilityData buildPartial() {
        SC2APIProtocol.Data.AbilityData result = new SC2APIProtocol.Data.AbilityData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.abilityId_ = abilityId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.linkName_ = linkName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.linkIndex_ = linkIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.buttonName_ = buttonName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.friendlyName_ = friendlyName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hotkey_ = hotkey_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.remapsToAbilityId_ = remapsToAbilityId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.available_ = available_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.allowMinimap_ = allowMinimap_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.allowAutocast_ = allowAutocast_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isBuilding_ = isBuilding_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.footprintRadius_ = footprintRadius_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.isInstantPlacement_ = isInstantPlacement_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.castRange_ = castRange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.AbilityData) {
          return mergeFrom((SC2APIProtocol.Data.AbilityData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.AbilityData other) {
        if (other == SC2APIProtocol.Data.AbilityData.getDefaultInstance()) return this;
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        if (other.hasLinkName()) {
          bitField0_ |= 0x00000002;
          linkName_ = other.linkName_;
          onChanged();
        }
        if (other.hasLinkIndex()) {
          setLinkIndex(other.getLinkIndex());
        }
        if (other.hasButtonName()) {
          bitField0_ |= 0x00000008;
          buttonName_ = other.buttonName_;
          onChanged();
        }
        if (other.hasFriendlyName()) {
          bitField0_ |= 0x00000010;
          friendlyName_ = other.friendlyName_;
          onChanged();
        }
        if (other.hasHotkey()) {
          bitField0_ |= 0x00000020;
          hotkey_ = other.hotkey_;
          onChanged();
        }
        if (other.hasRemapsToAbilityId()) {
          setRemapsToAbilityId(other.getRemapsToAbilityId());
        }
        if (other.hasAvailable()) {
          setAvailable(other.getAvailable());
        }
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        if (other.hasAllowMinimap()) {
          setAllowMinimap(other.getAllowMinimap());
        }
        if (other.hasAllowAutocast()) {
          setAllowAutocast(other.getAllowAutocast());
        }
        if (other.hasIsBuilding()) {
          setIsBuilding(other.getIsBuilding());
        }
        if (other.hasFootprintRadius()) {
          setFootprintRadius(other.getFootprintRadius());
        }
        if (other.hasIsInstantPlacement()) {
          setIsInstantPlacement(other.getIsInstantPlacement());
        }
        if (other.hasCastRange()) {
          setCastRange(other.getCastRange());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.AbilityData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.AbilityData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int abilityId_ ;
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 ability_id = 1;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 ability_id = 1;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 ability_id = 1;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000001;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 ability_id = 1;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        abilityId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object linkName_ = "";
      /**
       * <pre>
       * Catalog name of the ability.
       * </pre>
       *
       * <code>optional string link_name = 2;</code>
       */
      public boolean hasLinkName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Catalog name of the ability.
       * </pre>
       *
       * <code>optional string link_name = 2;</code>
       */
      public java.lang.String getLinkName() {
        java.lang.Object ref = linkName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            linkName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Catalog name of the ability.
       * </pre>
       *
       * <code>optional string link_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLinkNameBytes() {
        java.lang.Object ref = linkName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          linkName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Catalog name of the ability.
       * </pre>
       *
       * <code>optional string link_name = 2;</code>
       */
      public Builder setLinkName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        linkName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Catalog name of the ability.
       * </pre>
       *
       * <code>optional string link_name = 2;</code>
       */
      public Builder clearLinkName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        linkName_ = getDefaultInstance().getLinkName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Catalog name of the ability.
       * </pre>
       *
       * <code>optional string link_name = 2;</code>
       */
      public Builder setLinkNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        linkName_ = value;
        onChanged();
        return this;
      }

      private int linkIndex_ ;
      /**
       * <pre>
       * Catalog index of the ability.
       * </pre>
       *
       * <code>optional uint32 link_index = 3;</code>
       */
      public boolean hasLinkIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Catalog index of the ability.
       * </pre>
       *
       * <code>optional uint32 link_index = 3;</code>
       */
      public int getLinkIndex() {
        return linkIndex_;
      }
      /**
       * <pre>
       * Catalog index of the ability.
       * </pre>
       *
       * <code>optional uint32 link_index = 3;</code>
       */
      public Builder setLinkIndex(int value) {
        bitField0_ |= 0x00000004;
        linkIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Catalog index of the ability.
       * </pre>
       *
       * <code>optional uint32 link_index = 3;</code>
       */
      public Builder clearLinkIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        linkIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object buttonName_ = "";
      /**
       * <pre>
       * Name used for the command card. May not always be set.
       * </pre>
       *
       * <code>optional string button_name = 4;</code>
       */
      public boolean hasButtonName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Name used for the command card. May not always be set.
       * </pre>
       *
       * <code>optional string button_name = 4;</code>
       */
      public java.lang.String getButtonName() {
        java.lang.Object ref = buttonName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            buttonName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name used for the command card. May not always be set.
       * </pre>
       *
       * <code>optional string button_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getButtonNameBytes() {
        java.lang.Object ref = buttonName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          buttonName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name used for the command card. May not always be set.
       * </pre>
       *
       * <code>optional string button_name = 4;</code>
       */
      public Builder setButtonName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        buttonName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name used for the command card. May not always be set.
       * </pre>
       *
       * <code>optional string button_name = 4;</code>
       */
      public Builder clearButtonName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        buttonName_ = getDefaultInstance().getButtonName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name used for the command card. May not always be set.
       * </pre>
       *
       * <code>optional string button_name = 4;</code>
       */
      public Builder setButtonNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        buttonName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object friendlyName_ = "";
      /**
       * <pre>
       * A human friendly name when the button name or link name isn't descriptive.
       * </pre>
       *
       * <code>optional string friendly_name = 5;</code>
       */
      public boolean hasFriendlyName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * A human friendly name when the button name or link name isn't descriptive.
       * </pre>
       *
       * <code>optional string friendly_name = 5;</code>
       */
      public java.lang.String getFriendlyName() {
        java.lang.Object ref = friendlyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            friendlyName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human friendly name when the button name or link name isn't descriptive.
       * </pre>
       *
       * <code>optional string friendly_name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getFriendlyNameBytes() {
        java.lang.Object ref = friendlyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          friendlyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human friendly name when the button name or link name isn't descriptive.
       * </pre>
       *
       * <code>optional string friendly_name = 5;</code>
       */
      public Builder setFriendlyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        friendlyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human friendly name when the button name or link name isn't descriptive.
       * </pre>
       *
       * <code>optional string friendly_name = 5;</code>
       */
      public Builder clearFriendlyName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        friendlyName_ = getDefaultInstance().getFriendlyName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human friendly name when the button name or link name isn't descriptive.
       * </pre>
       *
       * <code>optional string friendly_name = 5;</code>
       */
      public Builder setFriendlyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        friendlyName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object hotkey_ = "";
      /**
       * <pre>
       * Hotkey. May not always be set.
       * </pre>
       *
       * <code>optional string hotkey = 6;</code>
       */
      public boolean hasHotkey() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Hotkey. May not always be set.
       * </pre>
       *
       * <code>optional string hotkey = 6;</code>
       */
      public java.lang.String getHotkey() {
        java.lang.Object ref = hotkey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hotkey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Hotkey. May not always be set.
       * </pre>
       *
       * <code>optional string hotkey = 6;</code>
       */
      public com.google.protobuf.ByteString
          getHotkeyBytes() {
        java.lang.Object ref = hotkey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hotkey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Hotkey. May not always be set.
       * </pre>
       *
       * <code>optional string hotkey = 6;</code>
       */
      public Builder setHotkey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        hotkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hotkey. May not always be set.
       * </pre>
       *
       * <code>optional string hotkey = 6;</code>
       */
      public Builder clearHotkey() {
        bitField0_ = (bitField0_ & ~0x00000020);
        hotkey_ = getDefaultInstance().getHotkey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hotkey. May not always be set.
       * </pre>
       *
       * <code>optional string hotkey = 6;</code>
       */
      public Builder setHotkeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        hotkey_ = value;
        onChanged();
        return this;
      }

      private int remapsToAbilityId_ ;
      /**
       * <pre>
       * This ability id may be represented by the given more generic id.
       * </pre>
       *
       * <code>optional uint32 remaps_to_ability_id = 7;</code>
       */
      public boolean hasRemapsToAbilityId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * This ability id may be represented by the given more generic id.
       * </pre>
       *
       * <code>optional uint32 remaps_to_ability_id = 7;</code>
       */
      public int getRemapsToAbilityId() {
        return remapsToAbilityId_;
      }
      /**
       * <pre>
       * This ability id may be represented by the given more generic id.
       * </pre>
       *
       * <code>optional uint32 remaps_to_ability_id = 7;</code>
       */
      public Builder setRemapsToAbilityId(int value) {
        bitField0_ |= 0x00000040;
        remapsToAbilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This ability id may be represented by the given more generic id.
       * </pre>
       *
       * <code>optional uint32 remaps_to_ability_id = 7;</code>
       */
      public Builder clearRemapsToAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        remapsToAbilityId_ = 0;
        onChanged();
        return this;
      }

      private boolean available_ ;
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 8;</code>
       */
      public boolean hasAvailable() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 8;</code>
       */
      public boolean getAvailable() {
        return available_;
      }
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 8;</code>
       */
      public Builder setAvailable(boolean value) {
        bitField0_ |= 0x00000080;
        available_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 8;</code>
       */
      public Builder clearAvailable() {
        bitField0_ = (bitField0_ & ~0x00000080);
        available_ = false;
        onChanged();
        return this;
      }

      private int target_ = 1;
      /**
       * <pre>
       * Determines if a point is optional or required.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Determines if a point is optional or required.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
       */
      public SC2APIProtocol.Data.AbilityData.Target getTarget() {
        @SuppressWarnings("deprecation")
        SC2APIProtocol.Data.AbilityData.Target result = SC2APIProtocol.Data.AbilityData.Target.valueOf(target_);
        return result == null ? SC2APIProtocol.Data.AbilityData.Target.None : result;
      }
      /**
       * <pre>
       * Determines if a point is optional or required.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
       */
      public Builder setTarget(SC2APIProtocol.Data.AbilityData.Target value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        target_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if a point is optional or required.
       * </pre>
       *
       * <code>optional .SC2APIProtocol.AbilityData.Target target = 9;</code>
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000100);
        target_ = 1;
        onChanged();
        return this;
      }

      private boolean allowMinimap_ ;
      /**
       * <pre>
       * Can be cast in the minimap.
       * </pre>
       *
       * <code>optional bool allow_minimap = 10;</code>
       */
      public boolean hasAllowMinimap() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       * Can be cast in the minimap.
       * </pre>
       *
       * <code>optional bool allow_minimap = 10;</code>
       */
      public boolean getAllowMinimap() {
        return allowMinimap_;
      }
      /**
       * <pre>
       * Can be cast in the minimap.
       * </pre>
       *
       * <code>optional bool allow_minimap = 10;</code>
       */
      public Builder setAllowMinimap(boolean value) {
        bitField0_ |= 0x00000200;
        allowMinimap_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Can be cast in the minimap.
       * </pre>
       *
       * <code>optional bool allow_minimap = 10;</code>
       */
      public Builder clearAllowMinimap() {
        bitField0_ = (bitField0_ & ~0x00000200);
        allowMinimap_ = false;
        onChanged();
        return this;
      }

      private boolean allowAutocast_ ;
      /**
       * <pre>
       * Autocast can be set.
       * </pre>
       *
       * <code>optional bool allow_autocast = 11;</code>
       */
      public boolean hasAllowAutocast() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       * Autocast can be set.
       * </pre>
       *
       * <code>optional bool allow_autocast = 11;</code>
       */
      public boolean getAllowAutocast() {
        return allowAutocast_;
      }
      /**
       * <pre>
       * Autocast can be set.
       * </pre>
       *
       * <code>optional bool allow_autocast = 11;</code>
       */
      public Builder setAllowAutocast(boolean value) {
        bitField0_ |= 0x00000400;
        allowAutocast_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Autocast can be set.
       * </pre>
       *
       * <code>optional bool allow_autocast = 11;</code>
       */
      public Builder clearAllowAutocast() {
        bitField0_ = (bitField0_ & ~0x00000400);
        allowAutocast_ = false;
        onChanged();
        return this;
      }

      private boolean isBuilding_ ;
      /**
       * <pre>
       * Requires placement to construct a building.
       * </pre>
       *
       * <code>optional bool is_building = 12;</code>
       */
      public boolean hasIsBuilding() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       * Requires placement to construct a building.
       * </pre>
       *
       * <code>optional bool is_building = 12;</code>
       */
      public boolean getIsBuilding() {
        return isBuilding_;
      }
      /**
       * <pre>
       * Requires placement to construct a building.
       * </pre>
       *
       * <code>optional bool is_building = 12;</code>
       */
      public Builder setIsBuilding(boolean value) {
        bitField0_ |= 0x00000800;
        isBuilding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Requires placement to construct a building.
       * </pre>
       *
       * <code>optional bool is_building = 12;</code>
       */
      public Builder clearIsBuilding() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isBuilding_ = false;
        onChanged();
        return this;
      }

      private float footprintRadius_ ;
      /**
       * <pre>
       * Estimation of the footprint size. Need a better footprint.
       * </pre>
       *
       * <code>optional float footprint_radius = 13;</code>
       */
      public boolean hasFootprintRadius() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       * Estimation of the footprint size. Need a better footprint.
       * </pre>
       *
       * <code>optional float footprint_radius = 13;</code>
       */
      public float getFootprintRadius() {
        return footprintRadius_;
      }
      /**
       * <pre>
       * Estimation of the footprint size. Need a better footprint.
       * </pre>
       *
       * <code>optional float footprint_radius = 13;</code>
       */
      public Builder setFootprintRadius(float value) {
        bitField0_ |= 0x00001000;
        footprintRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Estimation of the footprint size. Need a better footprint.
       * </pre>
       *
       * <code>optional float footprint_radius = 13;</code>
       */
      public Builder clearFootprintRadius() {
        bitField0_ = (bitField0_ & ~0x00001000);
        footprintRadius_ = 0F;
        onChanged();
        return this;
      }

      private boolean isInstantPlacement_ ;
      /**
       * <pre>
       * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
       * </pre>
       *
       * <code>optional bool is_instant_placement = 14;</code>
       */
      public boolean hasIsInstantPlacement() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
       * </pre>
       *
       * <code>optional bool is_instant_placement = 14;</code>
       */
      public boolean getIsInstantPlacement() {
        return isInstantPlacement_;
      }
      /**
       * <pre>
       * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
       * </pre>
       *
       * <code>optional bool is_instant_placement = 14;</code>
       */
      public Builder setIsInstantPlacement(boolean value) {
        bitField0_ |= 0x00002000;
        isInstantPlacement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Placement next to an existing structure, e.g., an add-on like a Tech Lab.
       * </pre>
       *
       * <code>optional bool is_instant_placement = 14;</code>
       */
      public Builder clearIsInstantPlacement() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isInstantPlacement_ = false;
        onChanged();
        return this;
      }

      private float castRange_ ;
      /**
       * <pre>
       * Range unit can cast ability without needing to approach target.
       * </pre>
       *
       * <code>optional float cast_range = 15;</code>
       */
      public boolean hasCastRange() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       * Range unit can cast ability without needing to approach target.
       * </pre>
       *
       * <code>optional float cast_range = 15;</code>
       */
      public float getCastRange() {
        return castRange_;
      }
      /**
       * <pre>
       * Range unit can cast ability without needing to approach target.
       * </pre>
       *
       * <code>optional float cast_range = 15;</code>
       */
      public Builder setCastRange(float value) {
        bitField0_ |= 0x00004000;
        castRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range unit can cast ability without needing to approach target.
       * </pre>
       *
       * <code>optional float cast_range = 15;</code>
       */
      public Builder clearCastRange() {
        bitField0_ = (bitField0_ & ~0x00004000);
        castRange_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.AbilityData)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.AbilityData)
    private static final SC2APIProtocol.Data.AbilityData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.AbilityData();
    }

    public static SC2APIProtocol.Data.AbilityData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AbilityData>
        PARSER = new com.google.protobuf.AbstractParser<AbilityData>() {
      @java.lang.Override
      public AbilityData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AbilityData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AbilityData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AbilityData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.AbilityData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DamageBonusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.DamageBonus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
     */
    boolean hasAttribute();
    /**
     * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
     */
    SC2APIProtocol.Data.Attribute getAttribute();

    /**
     * <code>optional float bonus = 2;</code>
     */
    boolean hasBonus();
    /**
     * <code>optional float bonus = 2;</code>
     */
    float getBonus();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.DamageBonus}
   */
  public  static final class DamageBonus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.DamageBonus)
      DamageBonusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DamageBonus.newBuilder() to construct.
    private DamageBonus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DamageBonus() {
      attribute_ = 1;
      bonus_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DamageBonus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              SC2APIProtocol.Data.Attribute value = SC2APIProtocol.Data.Attribute.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                attribute_ = rawValue;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              bonus_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_DamageBonus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_DamageBonus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.DamageBonus.class, SC2APIProtocol.Data.DamageBonus.Builder.class);
    }

    private int bitField0_;
    public static final int ATTRIBUTE_FIELD_NUMBER = 1;
    private int attribute_;
    /**
     * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
     */
    public boolean hasAttribute() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
     */
    public SC2APIProtocol.Data.Attribute getAttribute() {
      @SuppressWarnings("deprecation")
      SC2APIProtocol.Data.Attribute result = SC2APIProtocol.Data.Attribute.valueOf(attribute_);
      return result == null ? SC2APIProtocol.Data.Attribute.Light : result;
    }

    public static final int BONUS_FIELD_NUMBER = 2;
    private float bonus_;
    /**
     * <code>optional float bonus = 2;</code>
     */
    public boolean hasBonus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float bonus = 2;</code>
     */
    public float getBonus() {
      return bonus_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, attribute_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, bonus_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, attribute_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, bonus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.DamageBonus)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.DamageBonus other = (SC2APIProtocol.Data.DamageBonus) obj;

      boolean result = true;
      result = result && (hasAttribute() == other.hasAttribute());
      if (hasAttribute()) {
        result = result && attribute_ == other.attribute_;
      }
      result = result && (hasBonus() == other.hasBonus());
      if (hasBonus()) {
        result = result && (
            java.lang.Float.floatToIntBits(getBonus())
            == java.lang.Float.floatToIntBits(
                other.getBonus()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAttribute()) {
        hash = (37 * hash) + ATTRIBUTE_FIELD_NUMBER;
        hash = (53 * hash) + attribute_;
      }
      if (hasBonus()) {
        hash = (37 * hash) + BONUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBonus());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.DamageBonus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.DamageBonus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.DamageBonus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.DamageBonus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.DamageBonus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.DamageBonus)
        SC2APIProtocol.Data.DamageBonusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_DamageBonus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_DamageBonus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.DamageBonus.class, SC2APIProtocol.Data.DamageBonus.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.DamageBonus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        attribute_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        bonus_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_DamageBonus_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.DamageBonus getDefaultInstanceForType() {
        return SC2APIProtocol.Data.DamageBonus.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.DamageBonus build() {
        SC2APIProtocol.Data.DamageBonus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.DamageBonus buildPartial() {
        SC2APIProtocol.Data.DamageBonus result = new SC2APIProtocol.Data.DamageBonus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.attribute_ = attribute_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bonus_ = bonus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.DamageBonus) {
          return mergeFrom((SC2APIProtocol.Data.DamageBonus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.DamageBonus other) {
        if (other == SC2APIProtocol.Data.DamageBonus.getDefaultInstance()) return this;
        if (other.hasAttribute()) {
          setAttribute(other.getAttribute());
        }
        if (other.hasBonus()) {
          setBonus(other.getBonus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.DamageBonus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.DamageBonus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int attribute_ = 1;
      /**
       * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
       */
      public boolean hasAttribute() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
       */
      public SC2APIProtocol.Data.Attribute getAttribute() {
        @SuppressWarnings("deprecation")
        SC2APIProtocol.Data.Attribute result = SC2APIProtocol.Data.Attribute.valueOf(attribute_);
        return result == null ? SC2APIProtocol.Data.Attribute.Light : result;
      }
      /**
       * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
       */
      public Builder setAttribute(SC2APIProtocol.Data.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        attribute_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Attribute attribute = 1;</code>
       */
      public Builder clearAttribute() {
        bitField0_ = (bitField0_ & ~0x00000001);
        attribute_ = 1;
        onChanged();
        return this;
      }

      private float bonus_ ;
      /**
       * <code>optional float bonus = 2;</code>
       */
      public boolean hasBonus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float bonus = 2;</code>
       */
      public float getBonus() {
        return bonus_;
      }
      /**
       * <code>optional float bonus = 2;</code>
       */
      public Builder setBonus(float value) {
        bitField0_ |= 0x00000002;
        bonus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float bonus = 2;</code>
       */
      public Builder clearBonus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bonus_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.DamageBonus)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.DamageBonus)
    private static final SC2APIProtocol.Data.DamageBonus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.DamageBonus();
    }

    public static SC2APIProtocol.Data.DamageBonus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DamageBonus>
        PARSER = new com.google.protobuf.AbstractParser<DamageBonus>() {
      @java.lang.Override
      public DamageBonus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DamageBonus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DamageBonus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DamageBonus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.DamageBonus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WeaponOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.Weapon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
     */
    SC2APIProtocol.Data.Weapon.TargetType getType();

    /**
     * <code>optional float damage = 2;</code>
     */
    boolean hasDamage();
    /**
     * <code>optional float damage = 2;</code>
     */
    float getDamage();

    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    java.util.List<SC2APIProtocol.Data.DamageBonus> 
        getDamageBonusList();
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    SC2APIProtocol.Data.DamageBonus getDamageBonus(int index);
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    int getDamageBonusCount();
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    java.util.List<? extends SC2APIProtocol.Data.DamageBonusOrBuilder> 
        getDamageBonusOrBuilderList();
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    SC2APIProtocol.Data.DamageBonusOrBuilder getDamageBonusOrBuilder(
        int index);

    /**
     * <pre>
     * Number of hits per attack. (eg. Colossus has 2 beams)
     * </pre>
     *
     * <code>optional uint32 attacks = 4;</code>
     */
    boolean hasAttacks();
    /**
     * <pre>
     * Number of hits per attack. (eg. Colossus has 2 beams)
     * </pre>
     *
     * <code>optional uint32 attacks = 4;</code>
     */
    int getAttacks();

    /**
     * <code>optional float range = 5;</code>
     */
    boolean hasRange();
    /**
     * <code>optional float range = 5;</code>
     */
    float getRange();

    /**
     * <pre>
     * Time between attacks.
     * </pre>
     *
     * <code>optional float speed = 6;</code>
     */
    boolean hasSpeed();
    /**
     * <pre>
     * Time between attacks.
     * </pre>
     *
     * <code>optional float speed = 6;</code>
     */
    float getSpeed();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.Weapon}
   */
  public  static final class Weapon extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.Weapon)
      WeaponOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Weapon.newBuilder() to construct.
    private Weapon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Weapon() {
      type_ = 1;
      damage_ = 0F;
      damageBonus_ = java.util.Collections.emptyList();
      attacks_ = 0;
      range_ = 0F;
      speed_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Weapon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              SC2APIProtocol.Data.Weapon.TargetType value = SC2APIProtocol.Data.Weapon.TargetType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              damage_ = input.readFloat();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                damageBonus_ = new java.util.ArrayList<SC2APIProtocol.Data.DamageBonus>();
                mutable_bitField0_ |= 0x00000004;
              }
              damageBonus_.add(
                  input.readMessage(SC2APIProtocol.Data.DamageBonus.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              attacks_ = input.readUInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              range_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000010;
              speed_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          damageBonus_ = java.util.Collections.unmodifiableList(damageBonus_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_Weapon_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_Weapon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.Weapon.class, SC2APIProtocol.Data.Weapon.Builder.class);
    }

    /**
     * Protobuf enum {@code SC2APIProtocol.Weapon.TargetType}
     */
    public enum TargetType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Ground = 1;</code>
       */
      Ground(1),
      /**
       * <code>Air = 2;</code>
       */
      Air(2),
      /**
       * <code>Any = 3;</code>
       */
      Any(3),
      ;

      /**
       * <code>Ground = 1;</code>
       */
      public static final int Ground_VALUE = 1;
      /**
       * <code>Air = 2;</code>
       */
      public static final int Air_VALUE = 2;
      /**
       * <code>Any = 3;</code>
       */
      public static final int Any_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetType valueOf(int value) {
        return forNumber(value);
      }

      public static TargetType forNumber(int value) {
        switch (value) {
          case 1: return Ground;
          case 2: return Air;
          case 3: return Any;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TargetType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TargetType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TargetType>() {
              public TargetType findValueByNumber(int number) {
                return TargetType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SC2APIProtocol.Data.Weapon.getDescriptor().getEnumTypes().get(0);
      }

      private static final TargetType[] VALUES = values();

      public static TargetType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TargetType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SC2APIProtocol.Weapon.TargetType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
     */
    public SC2APIProtocol.Data.Weapon.TargetType getType() {
      @SuppressWarnings("deprecation")
      SC2APIProtocol.Data.Weapon.TargetType result = SC2APIProtocol.Data.Weapon.TargetType.valueOf(type_);
      return result == null ? SC2APIProtocol.Data.Weapon.TargetType.Ground : result;
    }

    public static final int DAMAGE_FIELD_NUMBER = 2;
    private float damage_;
    /**
     * <code>optional float damage = 2;</code>
     */
    public boolean hasDamage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float damage = 2;</code>
     */
    public float getDamage() {
      return damage_;
    }

    public static final int DAMAGE_BONUS_FIELD_NUMBER = 3;
    private java.util.List<SC2APIProtocol.Data.DamageBonus> damageBonus_;
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    public java.util.List<SC2APIProtocol.Data.DamageBonus> getDamageBonusList() {
      return damageBonus_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    public java.util.List<? extends SC2APIProtocol.Data.DamageBonusOrBuilder> 
        getDamageBonusOrBuilderList() {
      return damageBonus_;
    }
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    public int getDamageBonusCount() {
      return damageBonus_.size();
    }
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    public SC2APIProtocol.Data.DamageBonus getDamageBonus(int index) {
      return damageBonus_.get(index);
    }
    /**
     * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
     */
    public SC2APIProtocol.Data.DamageBonusOrBuilder getDamageBonusOrBuilder(
        int index) {
      return damageBonus_.get(index);
    }

    public static final int ATTACKS_FIELD_NUMBER = 4;
    private int attacks_;
    /**
     * <pre>
     * Number of hits per attack. (eg. Colossus has 2 beams)
     * </pre>
     *
     * <code>optional uint32 attacks = 4;</code>
     */
    public boolean hasAttacks() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Number of hits per attack. (eg. Colossus has 2 beams)
     * </pre>
     *
     * <code>optional uint32 attacks = 4;</code>
     */
    public int getAttacks() {
      return attacks_;
    }

    public static final int RANGE_FIELD_NUMBER = 5;
    private float range_;
    /**
     * <code>optional float range = 5;</code>
     */
    public boolean hasRange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float range = 5;</code>
     */
    public float getRange() {
      return range_;
    }

    public static final int SPEED_FIELD_NUMBER = 6;
    private float speed_;
    /**
     * <pre>
     * Time between attacks.
     * </pre>
     *
     * <code>optional float speed = 6;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Time between attacks.
     * </pre>
     *
     * <code>optional float speed = 6;</code>
     */
    public float getSpeed() {
      return speed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, damage_);
      }
      for (int i = 0; i < damageBonus_.size(); i++) {
        output.writeMessage(3, damageBonus_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, attacks_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(5, range_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(6, speed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, damage_);
      }
      for (int i = 0; i < damageBonus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, damageBonus_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, attacks_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, range_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, speed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.Weapon)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.Weapon other = (SC2APIProtocol.Data.Weapon) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && (hasDamage() == other.hasDamage());
      if (hasDamage()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDamage())
            == java.lang.Float.floatToIntBits(
                other.getDamage()));
      }
      result = result && getDamageBonusList()
          .equals(other.getDamageBonusList());
      result = result && (hasAttacks() == other.hasAttacks());
      if (hasAttacks()) {
        result = result && (getAttacks()
            == other.getAttacks());
      }
      result = result && (hasRange() == other.hasRange());
      if (hasRange()) {
        result = result && (
            java.lang.Float.floatToIntBits(getRange())
            == java.lang.Float.floatToIntBits(
                other.getRange()));
      }
      result = result && (hasSpeed() == other.hasSpeed());
      if (hasSpeed()) {
        result = result && (
            java.lang.Float.floatToIntBits(getSpeed())
            == java.lang.Float.floatToIntBits(
                other.getSpeed()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasDamage()) {
        hash = (37 * hash) + DAMAGE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDamage());
      }
      if (getDamageBonusCount() > 0) {
        hash = (37 * hash) + DAMAGE_BONUS_FIELD_NUMBER;
        hash = (53 * hash) + getDamageBonusList().hashCode();
      }
      if (hasAttacks()) {
        hash = (37 * hash) + ATTACKS_FIELD_NUMBER;
        hash = (53 * hash) + getAttacks();
      }
      if (hasRange()) {
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRange());
      }
      if (hasSpeed()) {
        hash = (37 * hash) + SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getSpeed());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.Weapon parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.Weapon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.Weapon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.Weapon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.Weapon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.Weapon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.Weapon)
        SC2APIProtocol.Data.WeaponOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_Weapon_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_Weapon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.Weapon.class, SC2APIProtocol.Data.Weapon.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.Weapon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDamageBonusFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        damage_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (damageBonusBuilder_ == null) {
          damageBonus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          damageBonusBuilder_.clear();
        }
        attacks_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        range_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_Weapon_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.Weapon getDefaultInstanceForType() {
        return SC2APIProtocol.Data.Weapon.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.Weapon build() {
        SC2APIProtocol.Data.Weapon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.Weapon buildPartial() {
        SC2APIProtocol.Data.Weapon result = new SC2APIProtocol.Data.Weapon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.damage_ = damage_;
        if (damageBonusBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            damageBonus_ = java.util.Collections.unmodifiableList(damageBonus_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.damageBonus_ = damageBonus_;
        } else {
          result.damageBonus_ = damageBonusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.attacks_ = attacks_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.range_ = range_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speed_ = speed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.Weapon) {
          return mergeFrom((SC2APIProtocol.Data.Weapon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.Weapon other) {
        if (other == SC2APIProtocol.Data.Weapon.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDamage()) {
          setDamage(other.getDamage());
        }
        if (damageBonusBuilder_ == null) {
          if (!other.damageBonus_.isEmpty()) {
            if (damageBonus_.isEmpty()) {
              damageBonus_ = other.damageBonus_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDamageBonusIsMutable();
              damageBonus_.addAll(other.damageBonus_);
            }
            onChanged();
          }
        } else {
          if (!other.damageBonus_.isEmpty()) {
            if (damageBonusBuilder_.isEmpty()) {
              damageBonusBuilder_.dispose();
              damageBonusBuilder_ = null;
              damageBonus_ = other.damageBonus_;
              bitField0_ = (bitField0_ & ~0x00000004);
              damageBonusBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDamageBonusFieldBuilder() : null;
            } else {
              damageBonusBuilder_.addAllMessages(other.damageBonus_);
            }
          }
        }
        if (other.hasAttacks()) {
          setAttacks(other.getAttacks());
        }
        if (other.hasRange()) {
          setRange(other.getRange());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.Weapon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.Weapon) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
       */
      public SC2APIProtocol.Data.Weapon.TargetType getType() {
        @SuppressWarnings("deprecation")
        SC2APIProtocol.Data.Weapon.TargetType result = SC2APIProtocol.Data.Weapon.TargetType.valueOf(type_);
        return result == null ? SC2APIProtocol.Data.Weapon.TargetType.Ground : result;
      }
      /**
       * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
       */
      public Builder setType(SC2APIProtocol.Data.Weapon.TargetType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Weapon.TargetType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      private float damage_ ;
      /**
       * <code>optional float damage = 2;</code>
       */
      public boolean hasDamage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float damage = 2;</code>
       */
      public float getDamage() {
        return damage_;
      }
      /**
       * <code>optional float damage = 2;</code>
       */
      public Builder setDamage(float value) {
        bitField0_ |= 0x00000002;
        damage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float damage = 2;</code>
       */
      public Builder clearDamage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        damage_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<SC2APIProtocol.Data.DamageBonus> damageBonus_ =
        java.util.Collections.emptyList();
      private void ensureDamageBonusIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          damageBonus_ = new java.util.ArrayList<SC2APIProtocol.Data.DamageBonus>(damageBonus_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Data.DamageBonus, SC2APIProtocol.Data.DamageBonus.Builder, SC2APIProtocol.Data.DamageBonusOrBuilder> damageBonusBuilder_;

      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public java.util.List<SC2APIProtocol.Data.DamageBonus> getDamageBonusList() {
        if (damageBonusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(damageBonus_);
        } else {
          return damageBonusBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public int getDamageBonusCount() {
        if (damageBonusBuilder_ == null) {
          return damageBonus_.size();
        } else {
          return damageBonusBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public SC2APIProtocol.Data.DamageBonus getDamageBonus(int index) {
        if (damageBonusBuilder_ == null) {
          return damageBonus_.get(index);
        } else {
          return damageBonusBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder setDamageBonus(
          int index, SC2APIProtocol.Data.DamageBonus value) {
        if (damageBonusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDamageBonusIsMutable();
          damageBonus_.set(index, value);
          onChanged();
        } else {
          damageBonusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder setDamageBonus(
          int index, SC2APIProtocol.Data.DamageBonus.Builder builderForValue) {
        if (damageBonusBuilder_ == null) {
          ensureDamageBonusIsMutable();
          damageBonus_.set(index, builderForValue.build());
          onChanged();
        } else {
          damageBonusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder addDamageBonus(SC2APIProtocol.Data.DamageBonus value) {
        if (damageBonusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDamageBonusIsMutable();
          damageBonus_.add(value);
          onChanged();
        } else {
          damageBonusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder addDamageBonus(
          int index, SC2APIProtocol.Data.DamageBonus value) {
        if (damageBonusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDamageBonusIsMutable();
          damageBonus_.add(index, value);
          onChanged();
        } else {
          damageBonusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder addDamageBonus(
          SC2APIProtocol.Data.DamageBonus.Builder builderForValue) {
        if (damageBonusBuilder_ == null) {
          ensureDamageBonusIsMutable();
          damageBonus_.add(builderForValue.build());
          onChanged();
        } else {
          damageBonusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder addDamageBonus(
          int index, SC2APIProtocol.Data.DamageBonus.Builder builderForValue) {
        if (damageBonusBuilder_ == null) {
          ensureDamageBonusIsMutable();
          damageBonus_.add(index, builderForValue.build());
          onChanged();
        } else {
          damageBonusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder addAllDamageBonus(
          java.lang.Iterable<? extends SC2APIProtocol.Data.DamageBonus> values) {
        if (damageBonusBuilder_ == null) {
          ensureDamageBonusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, damageBonus_);
          onChanged();
        } else {
          damageBonusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder clearDamageBonus() {
        if (damageBonusBuilder_ == null) {
          damageBonus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          damageBonusBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public Builder removeDamageBonus(int index) {
        if (damageBonusBuilder_ == null) {
          ensureDamageBonusIsMutable();
          damageBonus_.remove(index);
          onChanged();
        } else {
          damageBonusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public SC2APIProtocol.Data.DamageBonus.Builder getDamageBonusBuilder(
          int index) {
        return getDamageBonusFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public SC2APIProtocol.Data.DamageBonusOrBuilder getDamageBonusOrBuilder(
          int index) {
        if (damageBonusBuilder_ == null) {
          return damageBonus_.get(index);  } else {
          return damageBonusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public java.util.List<? extends SC2APIProtocol.Data.DamageBonusOrBuilder> 
           getDamageBonusOrBuilderList() {
        if (damageBonusBuilder_ != null) {
          return damageBonusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(damageBonus_);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public SC2APIProtocol.Data.DamageBonus.Builder addDamageBonusBuilder() {
        return getDamageBonusFieldBuilder().addBuilder(
            SC2APIProtocol.Data.DamageBonus.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public SC2APIProtocol.Data.DamageBonus.Builder addDamageBonusBuilder(
          int index) {
        return getDamageBonusFieldBuilder().addBuilder(
            index, SC2APIProtocol.Data.DamageBonus.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.DamageBonus damage_bonus = 3;</code>
       */
      public java.util.List<SC2APIProtocol.Data.DamageBonus.Builder> 
           getDamageBonusBuilderList() {
        return getDamageBonusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Data.DamageBonus, SC2APIProtocol.Data.DamageBonus.Builder, SC2APIProtocol.Data.DamageBonusOrBuilder> 
          getDamageBonusFieldBuilder() {
        if (damageBonusBuilder_ == null) {
          damageBonusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SC2APIProtocol.Data.DamageBonus, SC2APIProtocol.Data.DamageBonus.Builder, SC2APIProtocol.Data.DamageBonusOrBuilder>(
                  damageBonus_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          damageBonus_ = null;
        }
        return damageBonusBuilder_;
      }

      private int attacks_ ;
      /**
       * <pre>
       * Number of hits per attack. (eg. Colossus has 2 beams)
       * </pre>
       *
       * <code>optional uint32 attacks = 4;</code>
       */
      public boolean hasAttacks() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Number of hits per attack. (eg. Colossus has 2 beams)
       * </pre>
       *
       * <code>optional uint32 attacks = 4;</code>
       */
      public int getAttacks() {
        return attacks_;
      }
      /**
       * <pre>
       * Number of hits per attack. (eg. Colossus has 2 beams)
       * </pre>
       *
       * <code>optional uint32 attacks = 4;</code>
       */
      public Builder setAttacks(int value) {
        bitField0_ |= 0x00000008;
        attacks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of hits per attack. (eg. Colossus has 2 beams)
       * </pre>
       *
       * <code>optional uint32 attacks = 4;</code>
       */
      public Builder clearAttacks() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attacks_ = 0;
        onChanged();
        return this;
      }

      private float range_ ;
      /**
       * <code>optional float range = 5;</code>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float range = 5;</code>
       */
      public float getRange() {
        return range_;
      }
      /**
       * <code>optional float range = 5;</code>
       */
      public Builder setRange(float value) {
        bitField0_ |= 0x00000010;
        range_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float range = 5;</code>
       */
      public Builder clearRange() {
        bitField0_ = (bitField0_ & ~0x00000010);
        range_ = 0F;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <pre>
       * Time between attacks.
       * </pre>
       *
       * <code>optional float speed = 6;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Time between attacks.
       * </pre>
       *
       * <code>optional float speed = 6;</code>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       * Time between attacks.
       * </pre>
       *
       * <code>optional float speed = 6;</code>
       */
      public Builder setSpeed(float value) {
        bitField0_ |= 0x00000020;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time between attacks.
       * </pre>
       *
       * <code>optional float speed = 6;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        speed_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.Weapon)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.Weapon)
    private static final SC2APIProtocol.Data.Weapon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.Weapon();
    }

    public static SC2APIProtocol.Data.Weapon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Weapon>
        PARSER = new com.google.protobuf.AbstractParser<Weapon>() {
      @java.lang.Override
      public Weapon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Weapon(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Weapon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Weapon> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.Weapon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnitTypeDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.UnitTypeData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 unit_id = 1;</code>
     */
    boolean hasUnitId();
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 unit_id = 1;</code>
     */
    int getUnitId();

    /**
     * <pre>
     * Catalog name of the unit.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * Catalog name of the unit.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Catalog name of the unit.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 3;</code>
     */
    boolean hasAvailable();
    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 3;</code>
     */
    boolean getAvailable();

    /**
     * <pre>
     * Number of cargo slots it occupies in transports.
     * </pre>
     *
     * <code>optional uint32 cargo_size = 4;</code>
     */
    boolean hasCargoSize();
    /**
     * <pre>
     * Number of cargo slots it occupies in transports.
     * </pre>
     *
     * <code>optional uint32 cargo_size = 4;</code>
     */
    int getCargoSize();

    /**
     * <code>optional uint32 mineral_cost = 12;</code>
     */
    boolean hasMineralCost();
    /**
     * <code>optional uint32 mineral_cost = 12;</code>
     */
    int getMineralCost();

    /**
     * <code>optional uint32 vespene_cost = 13;</code>
     */
    boolean hasVespeneCost();
    /**
     * <code>optional uint32 vespene_cost = 13;</code>
     */
    int getVespeneCost();

    /**
     * <code>optional float food_required = 14;</code>
     */
    boolean hasFoodRequired();
    /**
     * <code>optional float food_required = 14;</code>
     */
    float getFoodRequired();

    /**
     * <code>optional float food_provided = 18;</code>
     */
    boolean hasFoodProvided();
    /**
     * <code>optional float food_provided = 18;</code>
     */
    float getFoodProvided();

    /**
     * <pre>
     * The ability that builds this unit.
     * </pre>
     *
     * <code>optional uint32 ability_id = 15;</code>
     */
    boolean hasAbilityId();
    /**
     * <pre>
     * The ability that builds this unit.
     * </pre>
     *
     * <code>optional uint32 ability_id = 15;</code>
     */
    int getAbilityId();

    /**
     * <code>optional .SC2APIProtocol.Race race = 16;</code>
     */
    boolean hasRace();
    /**
     * <code>optional .SC2APIProtocol.Race race = 16;</code>
     */
    SC2APIProtocol.Common.Race getRace();

    /**
     * <code>optional float build_time = 17;</code>
     */
    boolean hasBuildTime();
    /**
     * <code>optional float build_time = 17;</code>
     */
    float getBuildTime();

    /**
     * <code>optional bool has_vespene = 19;</code>
     */
    boolean hasHasVespene();
    /**
     * <code>optional bool has_vespene = 19;</code>
     */
    boolean getHasVespene();

    /**
     * <code>optional bool has_minerals = 20;</code>
     */
    boolean hasHasMinerals();
    /**
     * <code>optional bool has_minerals = 20;</code>
     */
    boolean getHasMinerals();

    /**
     * <pre>
     * Range unit reveals vision.
     * </pre>
     *
     * <code>optional float sight_range = 25;</code>
     */
    boolean hasSightRange();
    /**
     * <pre>
     * Range unit reveals vision.
     * </pre>
     *
     * <code>optional float sight_range = 25;</code>
     */
    float getSightRange();

    /**
     * <pre>
     * Other units that satisfy the same tech requirement.
     * </pre>
     *
     * <code>repeated uint32 tech_alias = 21;</code>
     */
    java.util.List<java.lang.Integer> getTechAliasList();
    /**
     * <pre>
     * Other units that satisfy the same tech requirement.
     * </pre>
     *
     * <code>repeated uint32 tech_alias = 21;</code>
     */
    int getTechAliasCount();
    /**
     * <pre>
     * Other units that satisfy the same tech requirement.
     * </pre>
     *
     * <code>repeated uint32 tech_alias = 21;</code>
     */
    int getTechAlias(int index);

    /**
     * <pre>
     * The morphed variant of this unit.
     * </pre>
     *
     * <code>optional uint32 unit_alias = 22;</code>
     */
    boolean hasUnitAlias();
    /**
     * <pre>
     * The morphed variant of this unit.
     * </pre>
     *
     * <code>optional uint32 unit_alias = 22;</code>
     */
    int getUnitAlias();

    /**
     * <pre>
     * Structure required to build this unit. (Or any with the same tech_alias)
     * </pre>
     *
     * <code>optional uint32 tech_requirement = 23;</code>
     */
    boolean hasTechRequirement();
    /**
     * <pre>
     * Structure required to build this unit. (Or any with the same tech_alias)
     * </pre>
     *
     * <code>optional uint32 tech_requirement = 23;</code>
     */
    int getTechRequirement();

    /**
     * <pre>
     * Whether tech_requirement is an add-on.
     * </pre>
     *
     * <code>optional bool require_attached = 24;</code>
     */
    boolean hasRequireAttached();
    /**
     * <pre>
     * Whether tech_requirement is an add-on.
     * </pre>
     *
     * <code>optional bool require_attached = 24;</code>
     */
    boolean getRequireAttached();

    /**
     * <pre>
     * Values include changes from upgrades
     * </pre>
     *
     * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
     */
    java.util.List<SC2APIProtocol.Data.Attribute> getAttributesList();
    /**
     * <pre>
     * Values include changes from upgrades
     * </pre>
     *
     * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     * Values include changes from upgrades
     * </pre>
     *
     * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
     */
    SC2APIProtocol.Data.Attribute getAttributes(int index);

    /**
     * <code>optional float movement_speed = 9;</code>
     */
    boolean hasMovementSpeed();
    /**
     * <code>optional float movement_speed = 9;</code>
     */
    float getMovementSpeed();

    /**
     * <code>optional float armor = 10;</code>
     */
    boolean hasArmor();
    /**
     * <code>optional float armor = 10;</code>
     */
    float getArmor();

    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    java.util.List<SC2APIProtocol.Data.Weapon> 
        getWeaponsList();
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    SC2APIProtocol.Data.Weapon getWeapons(int index);
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    int getWeaponsCount();
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    java.util.List<? extends SC2APIProtocol.Data.WeaponOrBuilder> 
        getWeaponsOrBuilderList();
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    SC2APIProtocol.Data.WeaponOrBuilder getWeaponsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SC2APIProtocol.UnitTypeData}
   */
  public  static final class UnitTypeData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.UnitTypeData)
      UnitTypeDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnitTypeData.newBuilder() to construct.
    private UnitTypeData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnitTypeData() {
      unitId_ = 0;
      name_ = "";
      available_ = false;
      cargoSize_ = 0;
      mineralCost_ = 0;
      vespeneCost_ = 0;
      foodRequired_ = 0F;
      foodProvided_ = 0F;
      abilityId_ = 0;
      race_ = 0;
      buildTime_ = 0F;
      hasVespene_ = false;
      hasMinerals_ = false;
      sightRange_ = 0F;
      techAlias_ = java.util.Collections.emptyList();
      unitAlias_ = 0;
      techRequirement_ = 0;
      requireAttached_ = false;
      attributes_ = java.util.Collections.emptyList();
      movementSpeed_ = 0F;
      armor_ = 0F;
      weapons_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnitTypeData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              unitId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              available_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cargoSize_ = input.readUInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
              SC2APIProtocol.Data.Attribute value = SC2APIProtocol.Data.Attribute.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                  attributes_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00040000;
                }
                attributes_.add(rawValue);
              }
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
                SC2APIProtocol.Data.Attribute value = SC2APIProtocol.Data.Attribute.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(8, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                    attributes_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField0_ |= 0x00040000;
                  }
                  attributes_.add(rawValue);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 77: {
              bitField0_ |= 0x00020000;
              movementSpeed_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00040000;
              armor_ = input.readFloat();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                weapons_ = new java.util.ArrayList<SC2APIProtocol.Data.Weapon>();
                mutable_bitField0_ |= 0x00200000;
              }
              weapons_.add(
                  input.readMessage(SC2APIProtocol.Data.Weapon.PARSER, extensionRegistry));
              break;
            }
            case 96: {
              bitField0_ |= 0x00000010;
              mineralCost_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000020;
              vespeneCost_ = input.readUInt32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00000040;
              foodRequired_ = input.readFloat();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              abilityId_ = input.readUInt32();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              SC2APIProtocol.Common.Race value = SC2APIProtocol.Common.Race.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                race_ = rawValue;
              }
              break;
            }
            case 141: {
              bitField0_ |= 0x00000400;
              buildTime_ = input.readFloat();
              break;
            }
            case 149: {
              bitField0_ |= 0x00000080;
              foodProvided_ = input.readFloat();
              break;
            }
            case 152: {
              bitField0_ |= 0x00000800;
              hasVespene_ = input.readBool();
              break;
            }
            case 160: {
              bitField0_ |= 0x00001000;
              hasMinerals_ = input.readBool();
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                techAlias_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              techAlias_.add(input.readUInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                techAlias_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                techAlias_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              bitField0_ |= 0x00004000;
              unitAlias_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00008000;
              techRequirement_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00010000;
              requireAttached_ = input.readBool();
              break;
            }
            case 205: {
              bitField0_ |= 0x00002000;
              sightRange_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          weapons_ = java.util.Collections.unmodifiableList(weapons_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          techAlias_ = java.util.Collections.unmodifiableList(techAlias_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UnitTypeData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UnitTypeData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.UnitTypeData.class, SC2APIProtocol.Data.UnitTypeData.Builder.class);
    }

    private int bitField0_;
    public static final int UNIT_ID_FIELD_NUMBER = 1;
    private int unitId_;
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 unit_id = 1;</code>
     */
    public boolean hasUnitId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 unit_id = 1;</code>
     */
    public int getUnitId() {
      return unitId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Catalog name of the unit.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Catalog name of the unit.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Catalog name of the unit.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AVAILABLE_FIELD_NUMBER = 3;
    private boolean available_;
    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 3;</code>
     */
    public boolean hasAvailable() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * If true, the ability may be used by this set of mods/map.
     * </pre>
     *
     * <code>optional bool available = 3;</code>
     */
    public boolean getAvailable() {
      return available_;
    }

    public static final int CARGO_SIZE_FIELD_NUMBER = 4;
    private int cargoSize_;
    /**
     * <pre>
     * Number of cargo slots it occupies in transports.
     * </pre>
     *
     * <code>optional uint32 cargo_size = 4;</code>
     */
    public boolean hasCargoSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Number of cargo slots it occupies in transports.
     * </pre>
     *
     * <code>optional uint32 cargo_size = 4;</code>
     */
    public int getCargoSize() {
      return cargoSize_;
    }

    public static final int MINERAL_COST_FIELD_NUMBER = 12;
    private int mineralCost_;
    /**
     * <code>optional uint32 mineral_cost = 12;</code>
     */
    public boolean hasMineralCost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 mineral_cost = 12;</code>
     */
    public int getMineralCost() {
      return mineralCost_;
    }

    public static final int VESPENE_COST_FIELD_NUMBER = 13;
    private int vespeneCost_;
    /**
     * <code>optional uint32 vespene_cost = 13;</code>
     */
    public boolean hasVespeneCost() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 vespene_cost = 13;</code>
     */
    public int getVespeneCost() {
      return vespeneCost_;
    }

    public static final int FOOD_REQUIRED_FIELD_NUMBER = 14;
    private float foodRequired_;
    /**
     * <code>optional float food_required = 14;</code>
     */
    public boolean hasFoodRequired() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float food_required = 14;</code>
     */
    public float getFoodRequired() {
      return foodRequired_;
    }

    public static final int FOOD_PROVIDED_FIELD_NUMBER = 18;
    private float foodProvided_;
    /**
     * <code>optional float food_provided = 18;</code>
     */
    public boolean hasFoodProvided() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float food_provided = 18;</code>
     */
    public float getFoodProvided() {
      return foodProvided_;
    }

    public static final int ABILITY_ID_FIELD_NUMBER = 15;
    private int abilityId_;
    /**
     * <pre>
     * The ability that builds this unit.
     * </pre>
     *
     * <code>optional uint32 ability_id = 15;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * The ability that builds this unit.
     * </pre>
     *
     * <code>optional uint32 ability_id = 15;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    public static final int RACE_FIELD_NUMBER = 16;
    private int race_;
    /**
     * <code>optional .SC2APIProtocol.Race race = 16;</code>
     */
    public boolean hasRace() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .SC2APIProtocol.Race race = 16;</code>
     */
    public SC2APIProtocol.Common.Race getRace() {
      @SuppressWarnings("deprecation")
      SC2APIProtocol.Common.Race result = SC2APIProtocol.Common.Race.valueOf(race_);
      return result == null ? SC2APIProtocol.Common.Race.NoRace : result;
    }

    public static final int BUILD_TIME_FIELD_NUMBER = 17;
    private float buildTime_;
    /**
     * <code>optional float build_time = 17;</code>
     */
    public boolean hasBuildTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float build_time = 17;</code>
     */
    public float getBuildTime() {
      return buildTime_;
    }

    public static final int HAS_VESPENE_FIELD_NUMBER = 19;
    private boolean hasVespene_;
    /**
     * <code>optional bool has_vespene = 19;</code>
     */
    public boolean hasHasVespene() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool has_vespene = 19;</code>
     */
    public boolean getHasVespene() {
      return hasVespene_;
    }

    public static final int HAS_MINERALS_FIELD_NUMBER = 20;
    private boolean hasMinerals_;
    /**
     * <code>optional bool has_minerals = 20;</code>
     */
    public boolean hasHasMinerals() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool has_minerals = 20;</code>
     */
    public boolean getHasMinerals() {
      return hasMinerals_;
    }

    public static final int SIGHT_RANGE_FIELD_NUMBER = 25;
    private float sightRange_;
    /**
     * <pre>
     * Range unit reveals vision.
     * </pre>
     *
     * <code>optional float sight_range = 25;</code>
     */
    public boolean hasSightRange() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * Range unit reveals vision.
     * </pre>
     *
     * <code>optional float sight_range = 25;</code>
     */
    public float getSightRange() {
      return sightRange_;
    }

    public static final int TECH_ALIAS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> techAlias_;
    /**
     * <pre>
     * Other units that satisfy the same tech requirement.
     * </pre>
     *
     * <code>repeated uint32 tech_alias = 21;</code>
     */
    public java.util.List<java.lang.Integer>
        getTechAliasList() {
      return techAlias_;
    }
    /**
     * <pre>
     * Other units that satisfy the same tech requirement.
     * </pre>
     *
     * <code>repeated uint32 tech_alias = 21;</code>
     */
    public int getTechAliasCount() {
      return techAlias_.size();
    }
    /**
     * <pre>
     * Other units that satisfy the same tech requirement.
     * </pre>
     *
     * <code>repeated uint32 tech_alias = 21;</code>
     */
    public int getTechAlias(int index) {
      return techAlias_.get(index);
    }

    public static final int UNIT_ALIAS_FIELD_NUMBER = 22;
    private int unitAlias_;
    /**
     * <pre>
     * The morphed variant of this unit.
     * </pre>
     *
     * <code>optional uint32 unit_alias = 22;</code>
     */
    public boolean hasUnitAlias() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * The morphed variant of this unit.
     * </pre>
     *
     * <code>optional uint32 unit_alias = 22;</code>
     */
    public int getUnitAlias() {
      return unitAlias_;
    }

    public static final int TECH_REQUIREMENT_FIELD_NUMBER = 23;
    private int techRequirement_;
    /**
     * <pre>
     * Structure required to build this unit. (Or any with the same tech_alias)
     * </pre>
     *
     * <code>optional uint32 tech_requirement = 23;</code>
     */
    public boolean hasTechRequirement() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     * Structure required to build this unit. (Or any with the same tech_alias)
     * </pre>
     *
     * <code>optional uint32 tech_requirement = 23;</code>
     */
    public int getTechRequirement() {
      return techRequirement_;
    }

    public static final int REQUIRE_ATTACHED_FIELD_NUMBER = 24;
    private boolean requireAttached_;
    /**
     * <pre>
     * Whether tech_requirement is an add-on.
     * </pre>
     *
     * <code>optional bool require_attached = 24;</code>
     */
    public boolean hasRequireAttached() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     * Whether tech_requirement is an add-on.
     * </pre>
     *
     * <code>optional bool require_attached = 24;</code>
     */
    public boolean getRequireAttached() {
      return requireAttached_;
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> attributes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, SC2APIProtocol.Data.Attribute> attributes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, SC2APIProtocol.Data.Attribute>() {
              public SC2APIProtocol.Data.Attribute convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                SC2APIProtocol.Data.Attribute result = SC2APIProtocol.Data.Attribute.valueOf(from);
                return result == null ? SC2APIProtocol.Data.Attribute.Light : result;
              }
            };
    /**
     * <pre>
     * Values include changes from upgrades
     * </pre>
     *
     * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
     */
    public java.util.List<SC2APIProtocol.Data.Attribute> getAttributesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, SC2APIProtocol.Data.Attribute>(attributes_, attributes_converter_);
    }
    /**
     * <pre>
     * Values include changes from upgrades
     * </pre>
     *
     * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
     */
    public int getAttributesCount() {
      return attributes_.size();
    }
    /**
     * <pre>
     * Values include changes from upgrades
     * </pre>
     *
     * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
     */
    public SC2APIProtocol.Data.Attribute getAttributes(int index) {
      return attributes_converter_.convert(attributes_.get(index));
    }

    public static final int MOVEMENT_SPEED_FIELD_NUMBER = 9;
    private float movementSpeed_;
    /**
     * <code>optional float movement_speed = 9;</code>
     */
    public boolean hasMovementSpeed() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float movement_speed = 9;</code>
     */
    public float getMovementSpeed() {
      return movementSpeed_;
    }

    public static final int ARMOR_FIELD_NUMBER = 10;
    private float armor_;
    /**
     * <code>optional float armor = 10;</code>
     */
    public boolean hasArmor() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional float armor = 10;</code>
     */
    public float getArmor() {
      return armor_;
    }

    public static final int WEAPONS_FIELD_NUMBER = 11;
    private java.util.List<SC2APIProtocol.Data.Weapon> weapons_;
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    public java.util.List<SC2APIProtocol.Data.Weapon> getWeaponsList() {
      return weapons_;
    }
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    public java.util.List<? extends SC2APIProtocol.Data.WeaponOrBuilder> 
        getWeaponsOrBuilderList() {
      return weapons_;
    }
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    public int getWeaponsCount() {
      return weapons_.size();
    }
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    public SC2APIProtocol.Data.Weapon getWeapons(int index) {
      return weapons_.get(index);
    }
    /**
     * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
     */
    public SC2APIProtocol.Data.WeaponOrBuilder getWeaponsOrBuilder(
        int index) {
      return weapons_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, unitId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, available_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, cargoSize_);
      }
      for (int i = 0; i < attributes_.size(); i++) {
        output.writeEnum(8, attributes_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(9, movementSpeed_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(10, armor_);
      }
      for (int i = 0; i < weapons_.size(); i++) {
        output.writeMessage(11, weapons_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(12, mineralCost_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(13, vespeneCost_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(14, foodRequired_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(15, abilityId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(16, race_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(17, buildTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(18, foodProvided_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(19, hasVespene_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(20, hasMinerals_);
      }
      for (int i = 0; i < techAlias_.size(); i++) {
        output.writeUInt32(21, techAlias_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(22, unitAlias_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(23, techRequirement_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(24, requireAttached_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(25, sightRange_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, unitId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, available_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, cargoSize_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(attributes_.get(i));
        }
        size += dataSize;
        size += 1 * attributes_.size();
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, movementSpeed_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, armor_);
      }
      for (int i = 0; i < weapons_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, weapons_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, mineralCost_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, vespeneCost_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, foodRequired_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, abilityId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, race_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, buildTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, foodProvided_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, hasVespene_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, hasMinerals_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < techAlias_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(techAlias_.get(i));
        }
        size += dataSize;
        size += 2 * getTechAliasList().size();
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, unitAlias_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, techRequirement_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, requireAttached_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, sightRange_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.UnitTypeData)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.UnitTypeData other = (SC2APIProtocol.Data.UnitTypeData) obj;

      boolean result = true;
      result = result && (hasUnitId() == other.hasUnitId());
      if (hasUnitId()) {
        result = result && (getUnitId()
            == other.getUnitId());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasAvailable() == other.hasAvailable());
      if (hasAvailable()) {
        result = result && (getAvailable()
            == other.getAvailable());
      }
      result = result && (hasCargoSize() == other.hasCargoSize());
      if (hasCargoSize()) {
        result = result && (getCargoSize()
            == other.getCargoSize());
      }
      result = result && (hasMineralCost() == other.hasMineralCost());
      if (hasMineralCost()) {
        result = result && (getMineralCost()
            == other.getMineralCost());
      }
      result = result && (hasVespeneCost() == other.hasVespeneCost());
      if (hasVespeneCost()) {
        result = result && (getVespeneCost()
            == other.getVespeneCost());
      }
      result = result && (hasFoodRequired() == other.hasFoodRequired());
      if (hasFoodRequired()) {
        result = result && (
            java.lang.Float.floatToIntBits(getFoodRequired())
            == java.lang.Float.floatToIntBits(
                other.getFoodRequired()));
      }
      result = result && (hasFoodProvided() == other.hasFoodProvided());
      if (hasFoodProvided()) {
        result = result && (
            java.lang.Float.floatToIntBits(getFoodProvided())
            == java.lang.Float.floatToIntBits(
                other.getFoodProvided()));
      }
      result = result && (hasAbilityId() == other.hasAbilityId());
      if (hasAbilityId()) {
        result = result && (getAbilityId()
            == other.getAbilityId());
      }
      result = result && (hasRace() == other.hasRace());
      if (hasRace()) {
        result = result && race_ == other.race_;
      }
      result = result && (hasBuildTime() == other.hasBuildTime());
      if (hasBuildTime()) {
        result = result && (
            java.lang.Float.floatToIntBits(getBuildTime())
            == java.lang.Float.floatToIntBits(
                other.getBuildTime()));
      }
      result = result && (hasHasVespene() == other.hasHasVespene());
      if (hasHasVespene()) {
        result = result && (getHasVespene()
            == other.getHasVespene());
      }
      result = result && (hasHasMinerals() == other.hasHasMinerals());
      if (hasHasMinerals()) {
        result = result && (getHasMinerals()
            == other.getHasMinerals());
      }
      result = result && (hasSightRange() == other.hasSightRange());
      if (hasSightRange()) {
        result = result && (
            java.lang.Float.floatToIntBits(getSightRange())
            == java.lang.Float.floatToIntBits(
                other.getSightRange()));
      }
      result = result && getTechAliasList()
          .equals(other.getTechAliasList());
      result = result && (hasUnitAlias() == other.hasUnitAlias());
      if (hasUnitAlias()) {
        result = result && (getUnitAlias()
            == other.getUnitAlias());
      }
      result = result && (hasTechRequirement() == other.hasTechRequirement());
      if (hasTechRequirement()) {
        result = result && (getTechRequirement()
            == other.getTechRequirement());
      }
      result = result && (hasRequireAttached() == other.hasRequireAttached());
      if (hasRequireAttached()) {
        result = result && (getRequireAttached()
            == other.getRequireAttached());
      }
      result = result && attributes_.equals(other.attributes_);
      result = result && (hasMovementSpeed() == other.hasMovementSpeed());
      if (hasMovementSpeed()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMovementSpeed())
            == java.lang.Float.floatToIntBits(
                other.getMovementSpeed()));
      }
      result = result && (hasArmor() == other.hasArmor());
      if (hasArmor()) {
        result = result && (
            java.lang.Float.floatToIntBits(getArmor())
            == java.lang.Float.floatToIntBits(
                other.getArmor()));
      }
      result = result && getWeaponsList()
          .equals(other.getWeaponsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUnitId()) {
        hash = (37 * hash) + UNIT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getUnitId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasAvailable()) {
        hash = (37 * hash) + AVAILABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAvailable());
      }
      if (hasCargoSize()) {
        hash = (37 * hash) + CARGO_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getCargoSize();
      }
      if (hasMineralCost()) {
        hash = (37 * hash) + MINERAL_COST_FIELD_NUMBER;
        hash = (53 * hash) + getMineralCost();
      }
      if (hasVespeneCost()) {
        hash = (37 * hash) + VESPENE_COST_FIELD_NUMBER;
        hash = (53 * hash) + getVespeneCost();
      }
      if (hasFoodRequired()) {
        hash = (37 * hash) + FOOD_REQUIRED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFoodRequired());
      }
      if (hasFoodProvided()) {
        hash = (37 * hash) + FOOD_PROVIDED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFoodProvided());
      }
      if (hasAbilityId()) {
        hash = (37 * hash) + ABILITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAbilityId();
      }
      if (hasRace()) {
        hash = (37 * hash) + RACE_FIELD_NUMBER;
        hash = (53 * hash) + race_;
      }
      if (hasBuildTime()) {
        hash = (37 * hash) + BUILD_TIME_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBuildTime());
      }
      if (hasHasVespene()) {
        hash = (37 * hash) + HAS_VESPENE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHasVespene());
      }
      if (hasHasMinerals()) {
        hash = (37 * hash) + HAS_MINERALS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHasMinerals());
      }
      if (hasSightRange()) {
        hash = (37 * hash) + SIGHT_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getSightRange());
      }
      if (getTechAliasCount() > 0) {
        hash = (37 * hash) + TECH_ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getTechAliasList().hashCode();
      }
      if (hasUnitAlias()) {
        hash = (37 * hash) + UNIT_ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getUnitAlias();
      }
      if (hasTechRequirement()) {
        hash = (37 * hash) + TECH_REQUIREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getTechRequirement();
      }
      if (hasRequireAttached()) {
        hash = (37 * hash) + REQUIRE_ATTACHED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRequireAttached());
      }
      if (getAttributesCount() > 0) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + attributes_.hashCode();
      }
      if (hasMovementSpeed()) {
        hash = (37 * hash) + MOVEMENT_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMovementSpeed());
      }
      if (hasArmor()) {
        hash = (37 * hash) + ARMOR_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getArmor());
      }
      if (getWeaponsCount() > 0) {
        hash = (37 * hash) + WEAPONS_FIELD_NUMBER;
        hash = (53 * hash) + getWeaponsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.UnitTypeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.UnitTypeData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.UnitTypeData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.UnitTypeData)
        SC2APIProtocol.Data.UnitTypeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UnitTypeData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UnitTypeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.UnitTypeData.class, SC2APIProtocol.Data.UnitTypeData.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.UnitTypeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWeaponsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unitId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        available_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        cargoSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mineralCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        vespeneCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        foodRequired_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        foodProvided_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        race_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        buildTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        hasVespene_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        hasMinerals_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        sightRange_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        techAlias_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        unitAlias_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        techRequirement_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        requireAttached_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        attributes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        movementSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00080000);
        armor_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (weaponsBuilder_ == null) {
          weapons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          weaponsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UnitTypeData_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.UnitTypeData getDefaultInstanceForType() {
        return SC2APIProtocol.Data.UnitTypeData.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.UnitTypeData build() {
        SC2APIProtocol.Data.UnitTypeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.UnitTypeData buildPartial() {
        SC2APIProtocol.Data.UnitTypeData result = new SC2APIProtocol.Data.UnitTypeData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitId_ = unitId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.available_ = available_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cargoSize_ = cargoSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mineralCost_ = mineralCost_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vespeneCost_ = vespeneCost_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.foodRequired_ = foodRequired_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.foodProvided_ = foodProvided_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.abilityId_ = abilityId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.race_ = race_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.buildTime_ = buildTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.hasVespene_ = hasVespene_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.hasMinerals_ = hasMinerals_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.sightRange_ = sightRange_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          techAlias_ = java.util.Collections.unmodifiableList(techAlias_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.techAlias_ = techAlias_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.unitAlias_ = unitAlias_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.techRequirement_ = techRequirement_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.requireAttached_ = requireAttached_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.attributes_ = attributes_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.movementSpeed_ = movementSpeed_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.armor_ = armor_;
        if (weaponsBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            weapons_ = java.util.Collections.unmodifiableList(weapons_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.weapons_ = weapons_;
        } else {
          result.weapons_ = weaponsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.UnitTypeData) {
          return mergeFrom((SC2APIProtocol.Data.UnitTypeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.UnitTypeData other) {
        if (other == SC2APIProtocol.Data.UnitTypeData.getDefaultInstance()) return this;
        if (other.hasUnitId()) {
          setUnitId(other.getUnitId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasAvailable()) {
          setAvailable(other.getAvailable());
        }
        if (other.hasCargoSize()) {
          setCargoSize(other.getCargoSize());
        }
        if (other.hasMineralCost()) {
          setMineralCost(other.getMineralCost());
        }
        if (other.hasVespeneCost()) {
          setVespeneCost(other.getVespeneCost());
        }
        if (other.hasFoodRequired()) {
          setFoodRequired(other.getFoodRequired());
        }
        if (other.hasFoodProvided()) {
          setFoodProvided(other.getFoodProvided());
        }
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        if (other.hasRace()) {
          setRace(other.getRace());
        }
        if (other.hasBuildTime()) {
          setBuildTime(other.getBuildTime());
        }
        if (other.hasHasVespene()) {
          setHasVespene(other.getHasVespene());
        }
        if (other.hasHasMinerals()) {
          setHasMinerals(other.getHasMinerals());
        }
        if (other.hasSightRange()) {
          setSightRange(other.getSightRange());
        }
        if (!other.techAlias_.isEmpty()) {
          if (techAlias_.isEmpty()) {
            techAlias_ = other.techAlias_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureTechAliasIsMutable();
            techAlias_.addAll(other.techAlias_);
          }
          onChanged();
        }
        if (other.hasUnitAlias()) {
          setUnitAlias(other.getUnitAlias());
        }
        if (other.hasTechRequirement()) {
          setTechRequirement(other.getTechRequirement());
        }
        if (other.hasRequireAttached()) {
          setRequireAttached(other.getRequireAttached());
        }
        if (!other.attributes_.isEmpty()) {
          if (attributes_.isEmpty()) {
            attributes_ = other.attributes_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureAttributesIsMutable();
            attributes_.addAll(other.attributes_);
          }
          onChanged();
        }
        if (other.hasMovementSpeed()) {
          setMovementSpeed(other.getMovementSpeed());
        }
        if (other.hasArmor()) {
          setArmor(other.getArmor());
        }
        if (weaponsBuilder_ == null) {
          if (!other.weapons_.isEmpty()) {
            if (weapons_.isEmpty()) {
              weapons_ = other.weapons_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureWeaponsIsMutable();
              weapons_.addAll(other.weapons_);
            }
            onChanged();
          }
        } else {
          if (!other.weapons_.isEmpty()) {
            if (weaponsBuilder_.isEmpty()) {
              weaponsBuilder_.dispose();
              weaponsBuilder_ = null;
              weapons_ = other.weapons_;
              bitField0_ = (bitField0_ & ~0x00200000);
              weaponsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWeaponsFieldBuilder() : null;
            } else {
              weaponsBuilder_.addAllMessages(other.weapons_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.UnitTypeData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.UnitTypeData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unitId_ ;
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 unit_id = 1;</code>
       */
      public boolean hasUnitId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 unit_id = 1;</code>
       */
      public int getUnitId() {
        return unitId_;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 unit_id = 1;</code>
       */
      public Builder setUnitId(int value) {
        bitField0_ |= 0x00000001;
        unitId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 unit_id = 1;</code>
       */
      public Builder clearUnitId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Catalog name of the unit.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Catalog name of the unit.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Catalog name of the unit.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Catalog name of the unit.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Catalog name of the unit.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Catalog name of the unit.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private boolean available_ ;
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 3;</code>
       */
      public boolean hasAvailable() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 3;</code>
       */
      public boolean getAvailable() {
        return available_;
      }
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 3;</code>
       */
      public Builder setAvailable(boolean value) {
        bitField0_ |= 0x00000004;
        available_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the ability may be used by this set of mods/map.
       * </pre>
       *
       * <code>optional bool available = 3;</code>
       */
      public Builder clearAvailable() {
        bitField0_ = (bitField0_ & ~0x00000004);
        available_ = false;
        onChanged();
        return this;
      }

      private int cargoSize_ ;
      /**
       * <pre>
       * Number of cargo slots it occupies in transports.
       * </pre>
       *
       * <code>optional uint32 cargo_size = 4;</code>
       */
      public boolean hasCargoSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Number of cargo slots it occupies in transports.
       * </pre>
       *
       * <code>optional uint32 cargo_size = 4;</code>
       */
      public int getCargoSize() {
        return cargoSize_;
      }
      /**
       * <pre>
       * Number of cargo slots it occupies in transports.
       * </pre>
       *
       * <code>optional uint32 cargo_size = 4;</code>
       */
      public Builder setCargoSize(int value) {
        bitField0_ |= 0x00000008;
        cargoSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of cargo slots it occupies in transports.
       * </pre>
       *
       * <code>optional uint32 cargo_size = 4;</code>
       */
      public Builder clearCargoSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cargoSize_ = 0;
        onChanged();
        return this;
      }

      private int mineralCost_ ;
      /**
       * <code>optional uint32 mineral_cost = 12;</code>
       */
      public boolean hasMineralCost() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 mineral_cost = 12;</code>
       */
      public int getMineralCost() {
        return mineralCost_;
      }
      /**
       * <code>optional uint32 mineral_cost = 12;</code>
       */
      public Builder setMineralCost(int value) {
        bitField0_ |= 0x00000010;
        mineralCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mineral_cost = 12;</code>
       */
      public Builder clearMineralCost() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mineralCost_ = 0;
        onChanged();
        return this;
      }

      private int vespeneCost_ ;
      /**
       * <code>optional uint32 vespene_cost = 13;</code>
       */
      public boolean hasVespeneCost() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 vespene_cost = 13;</code>
       */
      public int getVespeneCost() {
        return vespeneCost_;
      }
      /**
       * <code>optional uint32 vespene_cost = 13;</code>
       */
      public Builder setVespeneCost(int value) {
        bitField0_ |= 0x00000020;
        vespeneCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vespene_cost = 13;</code>
       */
      public Builder clearVespeneCost() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vespeneCost_ = 0;
        onChanged();
        return this;
      }

      private float foodRequired_ ;
      /**
       * <code>optional float food_required = 14;</code>
       */
      public boolean hasFoodRequired() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float food_required = 14;</code>
       */
      public float getFoodRequired() {
        return foodRequired_;
      }
      /**
       * <code>optional float food_required = 14;</code>
       */
      public Builder setFoodRequired(float value) {
        bitField0_ |= 0x00000040;
        foodRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float food_required = 14;</code>
       */
      public Builder clearFoodRequired() {
        bitField0_ = (bitField0_ & ~0x00000040);
        foodRequired_ = 0F;
        onChanged();
        return this;
      }

      private float foodProvided_ ;
      /**
       * <code>optional float food_provided = 18;</code>
       */
      public boolean hasFoodProvided() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float food_provided = 18;</code>
       */
      public float getFoodProvided() {
        return foodProvided_;
      }
      /**
       * <code>optional float food_provided = 18;</code>
       */
      public Builder setFoodProvided(float value) {
        bitField0_ |= 0x00000080;
        foodProvided_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float food_provided = 18;</code>
       */
      public Builder clearFoodProvided() {
        bitField0_ = (bitField0_ & ~0x00000080);
        foodProvided_ = 0F;
        onChanged();
        return this;
      }

      private int abilityId_ ;
      /**
       * <pre>
       * The ability that builds this unit.
       * </pre>
       *
       * <code>optional uint32 ability_id = 15;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * The ability that builds this unit.
       * </pre>
       *
       * <code>optional uint32 ability_id = 15;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <pre>
       * The ability that builds this unit.
       * </pre>
       *
       * <code>optional uint32 ability_id = 15;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000100;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ability that builds this unit.
       * </pre>
       *
       * <code>optional uint32 ability_id = 15;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        abilityId_ = 0;
        onChanged();
        return this;
      }

      private int race_ = 0;
      /**
       * <code>optional .SC2APIProtocol.Race race = 16;</code>
       */
      public boolean hasRace() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .SC2APIProtocol.Race race = 16;</code>
       */
      public SC2APIProtocol.Common.Race getRace() {
        @SuppressWarnings("deprecation")
        SC2APIProtocol.Common.Race result = SC2APIProtocol.Common.Race.valueOf(race_);
        return result == null ? SC2APIProtocol.Common.Race.NoRace : result;
      }
      /**
       * <code>optional .SC2APIProtocol.Race race = 16;</code>
       */
      public Builder setRace(SC2APIProtocol.Common.Race value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        race_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .SC2APIProtocol.Race race = 16;</code>
       */
      public Builder clearRace() {
        bitField0_ = (bitField0_ & ~0x00000200);
        race_ = 0;
        onChanged();
        return this;
      }

      private float buildTime_ ;
      /**
       * <code>optional float build_time = 17;</code>
       */
      public boolean hasBuildTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float build_time = 17;</code>
       */
      public float getBuildTime() {
        return buildTime_;
      }
      /**
       * <code>optional float build_time = 17;</code>
       */
      public Builder setBuildTime(float value) {
        bitField0_ |= 0x00000400;
        buildTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float build_time = 17;</code>
       */
      public Builder clearBuildTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        buildTime_ = 0F;
        onChanged();
        return this;
      }

      private boolean hasVespene_ ;
      /**
       * <code>optional bool has_vespene = 19;</code>
       */
      public boolean hasHasVespene() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool has_vespene = 19;</code>
       */
      public boolean getHasVespene() {
        return hasVespene_;
      }
      /**
       * <code>optional bool has_vespene = 19;</code>
       */
      public Builder setHasVespene(boolean value) {
        bitField0_ |= 0x00000800;
        hasVespene_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_vespene = 19;</code>
       */
      public Builder clearHasVespene() {
        bitField0_ = (bitField0_ & ~0x00000800);
        hasVespene_ = false;
        onChanged();
        return this;
      }

      private boolean hasMinerals_ ;
      /**
       * <code>optional bool has_minerals = 20;</code>
       */
      public boolean hasHasMinerals() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool has_minerals = 20;</code>
       */
      public boolean getHasMinerals() {
        return hasMinerals_;
      }
      /**
       * <code>optional bool has_minerals = 20;</code>
       */
      public Builder setHasMinerals(boolean value) {
        bitField0_ |= 0x00001000;
        hasMinerals_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_minerals = 20;</code>
       */
      public Builder clearHasMinerals() {
        bitField0_ = (bitField0_ & ~0x00001000);
        hasMinerals_ = false;
        onChanged();
        return this;
      }

      private float sightRange_ ;
      /**
       * <pre>
       * Range unit reveals vision.
       * </pre>
       *
       * <code>optional float sight_range = 25;</code>
       */
      public boolean hasSightRange() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       * Range unit reveals vision.
       * </pre>
       *
       * <code>optional float sight_range = 25;</code>
       */
      public float getSightRange() {
        return sightRange_;
      }
      /**
       * <pre>
       * Range unit reveals vision.
       * </pre>
       *
       * <code>optional float sight_range = 25;</code>
       */
      public Builder setSightRange(float value) {
        bitField0_ |= 0x00002000;
        sightRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range unit reveals vision.
       * </pre>
       *
       * <code>optional float sight_range = 25;</code>
       */
      public Builder clearSightRange() {
        bitField0_ = (bitField0_ & ~0x00002000);
        sightRange_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> techAlias_ = java.util.Collections.emptyList();
      private void ensureTechAliasIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          techAlias_ = new java.util.ArrayList<java.lang.Integer>(techAlias_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public java.util.List<java.lang.Integer>
          getTechAliasList() {
        return java.util.Collections.unmodifiableList(techAlias_);
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public int getTechAliasCount() {
        return techAlias_.size();
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public int getTechAlias(int index) {
        return techAlias_.get(index);
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public Builder setTechAlias(
          int index, int value) {
        ensureTechAliasIsMutable();
        techAlias_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public Builder addTechAlias(int value) {
        ensureTechAliasIsMutable();
        techAlias_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public Builder addAllTechAlias(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTechAliasIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, techAlias_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Other units that satisfy the same tech requirement.
       * </pre>
       *
       * <code>repeated uint32 tech_alias = 21;</code>
       */
      public Builder clearTechAlias() {
        techAlias_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      private int unitAlias_ ;
      /**
       * <pre>
       * The morphed variant of this unit.
       * </pre>
       *
       * <code>optional uint32 unit_alias = 22;</code>
       */
      public boolean hasUnitAlias() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       * The morphed variant of this unit.
       * </pre>
       *
       * <code>optional uint32 unit_alias = 22;</code>
       */
      public int getUnitAlias() {
        return unitAlias_;
      }
      /**
       * <pre>
       * The morphed variant of this unit.
       * </pre>
       *
       * <code>optional uint32 unit_alias = 22;</code>
       */
      public Builder setUnitAlias(int value) {
        bitField0_ |= 0x00008000;
        unitAlias_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The morphed variant of this unit.
       * </pre>
       *
       * <code>optional uint32 unit_alias = 22;</code>
       */
      public Builder clearUnitAlias() {
        bitField0_ = (bitField0_ & ~0x00008000);
        unitAlias_ = 0;
        onChanged();
        return this;
      }

      private int techRequirement_ ;
      /**
       * <pre>
       * Structure required to build this unit. (Or any with the same tech_alias)
       * </pre>
       *
       * <code>optional uint32 tech_requirement = 23;</code>
       */
      public boolean hasTechRequirement() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       * Structure required to build this unit. (Or any with the same tech_alias)
       * </pre>
       *
       * <code>optional uint32 tech_requirement = 23;</code>
       */
      public int getTechRequirement() {
        return techRequirement_;
      }
      /**
       * <pre>
       * Structure required to build this unit. (Or any with the same tech_alias)
       * </pre>
       *
       * <code>optional uint32 tech_requirement = 23;</code>
       */
      public Builder setTechRequirement(int value) {
        bitField0_ |= 0x00010000;
        techRequirement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Structure required to build this unit. (Or any with the same tech_alias)
       * </pre>
       *
       * <code>optional uint32 tech_requirement = 23;</code>
       */
      public Builder clearTechRequirement() {
        bitField0_ = (bitField0_ & ~0x00010000);
        techRequirement_ = 0;
        onChanged();
        return this;
      }

      private boolean requireAttached_ ;
      /**
       * <pre>
       * Whether tech_requirement is an add-on.
       * </pre>
       *
       * <code>optional bool require_attached = 24;</code>
       */
      public boolean hasRequireAttached() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       * Whether tech_requirement is an add-on.
       * </pre>
       *
       * <code>optional bool require_attached = 24;</code>
       */
      public boolean getRequireAttached() {
        return requireAttached_;
      }
      /**
       * <pre>
       * Whether tech_requirement is an add-on.
       * </pre>
       *
       * <code>optional bool require_attached = 24;</code>
       */
      public Builder setRequireAttached(boolean value) {
        bitField0_ |= 0x00020000;
        requireAttached_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether tech_requirement is an add-on.
       * </pre>
       *
       * <code>optional bool require_attached = 24;</code>
       */
      public Builder clearRequireAttached() {
        bitField0_ = (bitField0_ & ~0x00020000);
        requireAttached_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> attributes_ =
        java.util.Collections.emptyList();
      private void ensureAttributesIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          attributes_ = new java.util.ArrayList<java.lang.Integer>(attributes_);
          bitField0_ |= 0x00040000;
        }
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public java.util.List<SC2APIProtocol.Data.Attribute> getAttributesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, SC2APIProtocol.Data.Attribute>(attributes_, attributes_converter_);
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public int getAttributesCount() {
        return attributes_.size();
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public SC2APIProtocol.Data.Attribute getAttributes(int index) {
        return attributes_converter_.convert(attributes_.get(index));
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public Builder setAttributes(
          int index, SC2APIProtocol.Data.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributesIsMutable();
        attributes_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public Builder addAttributes(SC2APIProtocol.Data.Attribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributesIsMutable();
        attributes_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public Builder addAllAttributes(
          java.lang.Iterable<? extends SC2APIProtocol.Data.Attribute> values) {
        ensureAttributesIsMutable();
        for (SC2APIProtocol.Data.Attribute value : values) {
          attributes_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values include changes from upgrades
       * </pre>
       *
       * <code>repeated .SC2APIProtocol.Attribute attributes = 8;</code>
       */
      public Builder clearAttributes() {
        attributes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      private float movementSpeed_ ;
      /**
       * <code>optional float movement_speed = 9;</code>
       */
      public boolean hasMovementSpeed() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional float movement_speed = 9;</code>
       */
      public float getMovementSpeed() {
        return movementSpeed_;
      }
      /**
       * <code>optional float movement_speed = 9;</code>
       */
      public Builder setMovementSpeed(float value) {
        bitField0_ |= 0x00080000;
        movementSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float movement_speed = 9;</code>
       */
      public Builder clearMovementSpeed() {
        bitField0_ = (bitField0_ & ~0x00080000);
        movementSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float armor_ ;
      /**
       * <code>optional float armor = 10;</code>
       */
      public boolean hasArmor() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float armor = 10;</code>
       */
      public float getArmor() {
        return armor_;
      }
      /**
       * <code>optional float armor = 10;</code>
       */
      public Builder setArmor(float value) {
        bitField0_ |= 0x00100000;
        armor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float armor = 10;</code>
       */
      public Builder clearArmor() {
        bitField0_ = (bitField0_ & ~0x00100000);
        armor_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<SC2APIProtocol.Data.Weapon> weapons_ =
        java.util.Collections.emptyList();
      private void ensureWeaponsIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          weapons_ = new java.util.ArrayList<SC2APIProtocol.Data.Weapon>(weapons_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Data.Weapon, SC2APIProtocol.Data.Weapon.Builder, SC2APIProtocol.Data.WeaponOrBuilder> weaponsBuilder_;

      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public java.util.List<SC2APIProtocol.Data.Weapon> getWeaponsList() {
        if (weaponsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(weapons_);
        } else {
          return weaponsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public int getWeaponsCount() {
        if (weaponsBuilder_ == null) {
          return weapons_.size();
        } else {
          return weaponsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public SC2APIProtocol.Data.Weapon getWeapons(int index) {
        if (weaponsBuilder_ == null) {
          return weapons_.get(index);
        } else {
          return weaponsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder setWeapons(
          int index, SC2APIProtocol.Data.Weapon value) {
        if (weaponsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeaponsIsMutable();
          weapons_.set(index, value);
          onChanged();
        } else {
          weaponsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder setWeapons(
          int index, SC2APIProtocol.Data.Weapon.Builder builderForValue) {
        if (weaponsBuilder_ == null) {
          ensureWeaponsIsMutable();
          weapons_.set(index, builderForValue.build());
          onChanged();
        } else {
          weaponsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder addWeapons(SC2APIProtocol.Data.Weapon value) {
        if (weaponsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeaponsIsMutable();
          weapons_.add(value);
          onChanged();
        } else {
          weaponsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder addWeapons(
          int index, SC2APIProtocol.Data.Weapon value) {
        if (weaponsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeaponsIsMutable();
          weapons_.add(index, value);
          onChanged();
        } else {
          weaponsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder addWeapons(
          SC2APIProtocol.Data.Weapon.Builder builderForValue) {
        if (weaponsBuilder_ == null) {
          ensureWeaponsIsMutable();
          weapons_.add(builderForValue.build());
          onChanged();
        } else {
          weaponsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder addWeapons(
          int index, SC2APIProtocol.Data.Weapon.Builder builderForValue) {
        if (weaponsBuilder_ == null) {
          ensureWeaponsIsMutable();
          weapons_.add(index, builderForValue.build());
          onChanged();
        } else {
          weaponsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder addAllWeapons(
          java.lang.Iterable<? extends SC2APIProtocol.Data.Weapon> values) {
        if (weaponsBuilder_ == null) {
          ensureWeaponsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weapons_);
          onChanged();
        } else {
          weaponsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder clearWeapons() {
        if (weaponsBuilder_ == null) {
          weapons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          weaponsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public Builder removeWeapons(int index) {
        if (weaponsBuilder_ == null) {
          ensureWeaponsIsMutable();
          weapons_.remove(index);
          onChanged();
        } else {
          weaponsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public SC2APIProtocol.Data.Weapon.Builder getWeaponsBuilder(
          int index) {
        return getWeaponsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public SC2APIProtocol.Data.WeaponOrBuilder getWeaponsOrBuilder(
          int index) {
        if (weaponsBuilder_ == null) {
          return weapons_.get(index);  } else {
          return weaponsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public java.util.List<? extends SC2APIProtocol.Data.WeaponOrBuilder> 
           getWeaponsOrBuilderList() {
        if (weaponsBuilder_ != null) {
          return weaponsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(weapons_);
        }
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public SC2APIProtocol.Data.Weapon.Builder addWeaponsBuilder() {
        return getWeaponsFieldBuilder().addBuilder(
            SC2APIProtocol.Data.Weapon.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public SC2APIProtocol.Data.Weapon.Builder addWeaponsBuilder(
          int index) {
        return getWeaponsFieldBuilder().addBuilder(
            index, SC2APIProtocol.Data.Weapon.getDefaultInstance());
      }
      /**
       * <code>repeated .SC2APIProtocol.Weapon weapons = 11;</code>
       */
      public java.util.List<SC2APIProtocol.Data.Weapon.Builder> 
           getWeaponsBuilderList() {
        return getWeaponsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SC2APIProtocol.Data.Weapon, SC2APIProtocol.Data.Weapon.Builder, SC2APIProtocol.Data.WeaponOrBuilder> 
          getWeaponsFieldBuilder() {
        if (weaponsBuilder_ == null) {
          weaponsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SC2APIProtocol.Data.Weapon, SC2APIProtocol.Data.Weapon.Builder, SC2APIProtocol.Data.WeaponOrBuilder>(
                  weapons_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          weapons_ = null;
        }
        return weaponsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.UnitTypeData)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.UnitTypeData)
    private static final SC2APIProtocol.Data.UnitTypeData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.UnitTypeData();
    }

    public static SC2APIProtocol.Data.UnitTypeData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<UnitTypeData>
        PARSER = new com.google.protobuf.AbstractParser<UnitTypeData>() {
      @java.lang.Override
      public UnitTypeData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnitTypeData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnitTypeData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnitTypeData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.UnitTypeData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpgradeDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.UpgradeData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 upgrade_id = 1;</code>
     */
    boolean hasUpgradeId();
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 upgrade_id = 1;</code>
     */
    int getUpgradeId();

    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional uint32 mineral_cost = 3;</code>
     */
    boolean hasMineralCost();
    /**
     * <code>optional uint32 mineral_cost = 3;</code>
     */
    int getMineralCost();

    /**
     * <code>optional uint32 vespene_cost = 4;</code>
     */
    boolean hasVespeneCost();
    /**
     * <code>optional uint32 vespene_cost = 4;</code>
     */
    int getVespeneCost();

    /**
     * <code>optional float research_time = 5;</code>
     */
    boolean hasResearchTime();
    /**
     * <code>optional float research_time = 5;</code>
     */
    float getResearchTime();

    /**
     * <code>optional uint32 ability_id = 6;</code>
     */
    boolean hasAbilityId();
    /**
     * <code>optional uint32 ability_id = 6;</code>
     */
    int getAbilityId();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.UpgradeData}
   */
  public  static final class UpgradeData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.UpgradeData)
      UpgradeDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpgradeData.newBuilder() to construct.
    private UpgradeData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpgradeData() {
      upgradeId_ = 0;
      name_ = "";
      mineralCost_ = 0;
      vespeneCost_ = 0;
      researchTime_ = 0F;
      abilityId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpgradeData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              upgradeId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mineralCost_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              vespeneCost_ = input.readUInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              researchTime_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              abilityId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UpgradeData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UpgradeData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.UpgradeData.class, SC2APIProtocol.Data.UpgradeData.Builder.class);
    }

    private int bitField0_;
    public static final int UPGRADE_ID_FIELD_NUMBER = 1;
    private int upgradeId_;
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 upgrade_id = 1;</code>
     */
    public boolean hasUpgradeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 upgrade_id = 1;</code>
     */
    public int getUpgradeId() {
      return upgradeId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINERAL_COST_FIELD_NUMBER = 3;
    private int mineralCost_;
    /**
     * <code>optional uint32 mineral_cost = 3;</code>
     */
    public boolean hasMineralCost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mineral_cost = 3;</code>
     */
    public int getMineralCost() {
      return mineralCost_;
    }

    public static final int VESPENE_COST_FIELD_NUMBER = 4;
    private int vespeneCost_;
    /**
     * <code>optional uint32 vespene_cost = 4;</code>
     */
    public boolean hasVespeneCost() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 vespene_cost = 4;</code>
     */
    public int getVespeneCost() {
      return vespeneCost_;
    }

    public static final int RESEARCH_TIME_FIELD_NUMBER = 5;
    private float researchTime_;
    /**
     * <code>optional float research_time = 5;</code>
     */
    public boolean hasResearchTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float research_time = 5;</code>
     */
    public float getResearchTime() {
      return researchTime_;
    }

    public static final int ABILITY_ID_FIELD_NUMBER = 6;
    private int abilityId_;
    /**
     * <code>optional uint32 ability_id = 6;</code>
     */
    public boolean hasAbilityId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 ability_id = 6;</code>
     */
    public int getAbilityId() {
      return abilityId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, upgradeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, mineralCost_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, vespeneCost_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, researchTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, abilityId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, upgradeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mineralCost_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, vespeneCost_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, researchTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, abilityId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.UpgradeData)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.UpgradeData other = (SC2APIProtocol.Data.UpgradeData) obj;

      boolean result = true;
      result = result && (hasUpgradeId() == other.hasUpgradeId());
      if (hasUpgradeId()) {
        result = result && (getUpgradeId()
            == other.getUpgradeId());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasMineralCost() == other.hasMineralCost());
      if (hasMineralCost()) {
        result = result && (getMineralCost()
            == other.getMineralCost());
      }
      result = result && (hasVespeneCost() == other.hasVespeneCost());
      if (hasVespeneCost()) {
        result = result && (getVespeneCost()
            == other.getVespeneCost());
      }
      result = result && (hasResearchTime() == other.hasResearchTime());
      if (hasResearchTime()) {
        result = result && (
            java.lang.Float.floatToIntBits(getResearchTime())
            == java.lang.Float.floatToIntBits(
                other.getResearchTime()));
      }
      result = result && (hasAbilityId() == other.hasAbilityId());
      if (hasAbilityId()) {
        result = result && (getAbilityId()
            == other.getAbilityId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUpgradeId()) {
        hash = (37 * hash) + UPGRADE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getUpgradeId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasMineralCost()) {
        hash = (37 * hash) + MINERAL_COST_FIELD_NUMBER;
        hash = (53 * hash) + getMineralCost();
      }
      if (hasVespeneCost()) {
        hash = (37 * hash) + VESPENE_COST_FIELD_NUMBER;
        hash = (53 * hash) + getVespeneCost();
      }
      if (hasResearchTime()) {
        hash = (37 * hash) + RESEARCH_TIME_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getResearchTime());
      }
      if (hasAbilityId()) {
        hash = (37 * hash) + ABILITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAbilityId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UpgradeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.UpgradeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.UpgradeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.UpgradeData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.UpgradeData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.UpgradeData)
        SC2APIProtocol.Data.UpgradeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UpgradeData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UpgradeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.UpgradeData.class, SC2APIProtocol.Data.UpgradeData.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.UpgradeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        upgradeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        mineralCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        vespeneCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        researchTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        abilityId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_UpgradeData_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.UpgradeData getDefaultInstanceForType() {
        return SC2APIProtocol.Data.UpgradeData.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.UpgradeData build() {
        SC2APIProtocol.Data.UpgradeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.UpgradeData buildPartial() {
        SC2APIProtocol.Data.UpgradeData result = new SC2APIProtocol.Data.UpgradeData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.upgradeId_ = upgradeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mineralCost_ = mineralCost_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vespeneCost_ = vespeneCost_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.researchTime_ = researchTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.abilityId_ = abilityId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.UpgradeData) {
          return mergeFrom((SC2APIProtocol.Data.UpgradeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.UpgradeData other) {
        if (other == SC2APIProtocol.Data.UpgradeData.getDefaultInstance()) return this;
        if (other.hasUpgradeId()) {
          setUpgradeId(other.getUpgradeId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasMineralCost()) {
          setMineralCost(other.getMineralCost());
        }
        if (other.hasVespeneCost()) {
          setVespeneCost(other.getVespeneCost());
        }
        if (other.hasResearchTime()) {
          setResearchTime(other.getResearchTime());
        }
        if (other.hasAbilityId()) {
          setAbilityId(other.getAbilityId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.UpgradeData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.UpgradeData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int upgradeId_ ;
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 upgrade_id = 1;</code>
       */
      public boolean hasUpgradeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 upgrade_id = 1;</code>
       */
      public int getUpgradeId() {
        return upgradeId_;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 upgrade_id = 1;</code>
       */
      public Builder setUpgradeId(int value) {
        bitField0_ |= 0x00000001;
        upgradeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 upgrade_id = 1;</code>
       */
      public Builder clearUpgradeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        upgradeId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private int mineralCost_ ;
      /**
       * <code>optional uint32 mineral_cost = 3;</code>
       */
      public boolean hasMineralCost() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mineral_cost = 3;</code>
       */
      public int getMineralCost() {
        return mineralCost_;
      }
      /**
       * <code>optional uint32 mineral_cost = 3;</code>
       */
      public Builder setMineralCost(int value) {
        bitField0_ |= 0x00000004;
        mineralCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mineral_cost = 3;</code>
       */
      public Builder clearMineralCost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mineralCost_ = 0;
        onChanged();
        return this;
      }

      private int vespeneCost_ ;
      /**
       * <code>optional uint32 vespene_cost = 4;</code>
       */
      public boolean hasVespeneCost() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 vespene_cost = 4;</code>
       */
      public int getVespeneCost() {
        return vespeneCost_;
      }
      /**
       * <code>optional uint32 vespene_cost = 4;</code>
       */
      public Builder setVespeneCost(int value) {
        bitField0_ |= 0x00000008;
        vespeneCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vespene_cost = 4;</code>
       */
      public Builder clearVespeneCost() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vespeneCost_ = 0;
        onChanged();
        return this;
      }

      private float researchTime_ ;
      /**
       * <code>optional float research_time = 5;</code>
       */
      public boolean hasResearchTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float research_time = 5;</code>
       */
      public float getResearchTime() {
        return researchTime_;
      }
      /**
       * <code>optional float research_time = 5;</code>
       */
      public Builder setResearchTime(float value) {
        bitField0_ |= 0x00000010;
        researchTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float research_time = 5;</code>
       */
      public Builder clearResearchTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        researchTime_ = 0F;
        onChanged();
        return this;
      }

      private int abilityId_ ;
      /**
       * <code>optional uint32 ability_id = 6;</code>
       */
      public boolean hasAbilityId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 ability_id = 6;</code>
       */
      public int getAbilityId() {
        return abilityId_;
      }
      /**
       * <code>optional uint32 ability_id = 6;</code>
       */
      public Builder setAbilityId(int value) {
        bitField0_ |= 0x00000020;
        abilityId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_id = 6;</code>
       */
      public Builder clearAbilityId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        abilityId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.UpgradeData)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.UpgradeData)
    private static final SC2APIProtocol.Data.UpgradeData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.UpgradeData();
    }

    public static SC2APIProtocol.Data.UpgradeData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<UpgradeData>
        PARSER = new com.google.protobuf.AbstractParser<UpgradeData>() {
      @java.lang.Override
      public UpgradeData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpgradeData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpgradeData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpgradeData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.UpgradeData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BuffDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.BuffData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 buff_id = 1;</code>
     */
    boolean hasBuffId();
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 buff_id = 1;</code>
     */
    int getBuffId();

    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.BuffData}
   */
  public  static final class BuffData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.BuffData)
      BuffDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BuffData.newBuilder() to construct.
    private BuffData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BuffData() {
      buffId_ = 0;
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BuffData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              buffId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_BuffData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_BuffData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.BuffData.class, SC2APIProtocol.Data.BuffData.Builder.class);
    }

    private int bitField0_;
    public static final int BUFF_ID_FIELD_NUMBER = 1;
    private int buffId_;
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 buff_id = 1;</code>
     */
    public boolean hasBuffId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 buff_id = 1;</code>
     */
    public int getBuffId() {
      return buffId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, buffId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, buffId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.BuffData)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.BuffData other = (SC2APIProtocol.Data.BuffData) obj;

      boolean result = true;
      result = result && (hasBuffId() == other.hasBuffId());
      if (hasBuffId()) {
        result = result && (getBuffId()
            == other.getBuffId());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBuffId()) {
        hash = (37 * hash) + BUFF_ID_FIELD_NUMBER;
        hash = (53 * hash) + getBuffId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.BuffData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.BuffData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.BuffData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.BuffData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.BuffData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.BuffData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.BuffData)
        SC2APIProtocol.Data.BuffDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_BuffData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_BuffData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.BuffData.class, SC2APIProtocol.Data.BuffData.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.BuffData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        buffId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_BuffData_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.BuffData getDefaultInstanceForType() {
        return SC2APIProtocol.Data.BuffData.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.BuffData build() {
        SC2APIProtocol.Data.BuffData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.BuffData buildPartial() {
        SC2APIProtocol.Data.BuffData result = new SC2APIProtocol.Data.BuffData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buffId_ = buffId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.BuffData) {
          return mergeFrom((SC2APIProtocol.Data.BuffData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.BuffData other) {
        if (other == SC2APIProtocol.Data.BuffData.getDefaultInstance()) return this;
        if (other.hasBuffId()) {
          setBuffId(other.getBuffId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.BuffData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.BuffData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int buffId_ ;
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 buff_id = 1;</code>
       */
      public boolean hasBuffId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 buff_id = 1;</code>
       */
      public int getBuffId() {
        return buffId_;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 buff_id = 1;</code>
       */
      public Builder setBuffId(int value) {
        bitField0_ |= 0x00000001;
        buffId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 buff_id = 1;</code>
       */
      public Builder clearBuffId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buffId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.BuffData)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.BuffData)
    private static final SC2APIProtocol.Data.BuffData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.BuffData();
    }

    public static SC2APIProtocol.Data.BuffData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BuffData>
        PARSER = new com.google.protobuf.AbstractParser<BuffData>() {
      @java.lang.Override
      public BuffData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuffData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BuffData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BuffData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.BuffData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EffectDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC2APIProtocol.EffectData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 effect_id = 1;</code>
     */
    boolean hasEffectId();
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 effect_id = 1;</code>
     */
    int getEffectId();

    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string friendly_name = 3;</code>
     */
    boolean hasFriendlyName();
    /**
     * <code>optional string friendly_name = 3;</code>
     */
    java.lang.String getFriendlyName();
    /**
     * <code>optional string friendly_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getFriendlyNameBytes();

    /**
     * <code>optional float radius = 4;</code>
     */
    boolean hasRadius();
    /**
     * <code>optional float radius = 4;</code>
     */
    float getRadius();
  }
  /**
   * Protobuf type {@code SC2APIProtocol.EffectData}
   */
  public  static final class EffectData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC2APIProtocol.EffectData)
      EffectDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EffectData.newBuilder() to construct.
    private EffectData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EffectData() {
      effectId_ = 0;
      name_ = "";
      friendlyName_ = "";
      radius_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EffectData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              effectId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              friendlyName_ = bs;
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              radius_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_EffectData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SC2APIProtocol.Data.internal_static_SC2APIProtocol_EffectData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SC2APIProtocol.Data.EffectData.class, SC2APIProtocol.Data.EffectData.Builder.class);
    }

    private int bitField0_;
    public static final int EFFECT_ID_FIELD_NUMBER = 1;
    private int effectId_;
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 effect_id = 1;</code>
     */
    public boolean hasEffectId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Stable ID.
     * </pre>
     *
     * <code>optional uint32 effect_id = 1;</code>
     */
    public int getEffectId() {
      return effectId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FRIENDLY_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object friendlyName_;
    /**
     * <code>optional string friendly_name = 3;</code>
     */
    public boolean hasFriendlyName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string friendly_name = 3;</code>
     */
    public java.lang.String getFriendlyName() {
      java.lang.Object ref = friendlyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          friendlyName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string friendly_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFriendlyNameBytes() {
      java.lang.Object ref = friendlyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        friendlyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RADIUS_FIELD_NUMBER = 4;
    private float radius_;
    /**
     * <code>optional float radius = 4;</code>
     */
    public boolean hasRadius() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float radius = 4;</code>
     */
    public float getRadius() {
      return radius_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, effectId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, friendlyName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, radius_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, effectId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, friendlyName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, radius_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SC2APIProtocol.Data.EffectData)) {
        return super.equals(obj);
      }
      SC2APIProtocol.Data.EffectData other = (SC2APIProtocol.Data.EffectData) obj;

      boolean result = true;
      result = result && (hasEffectId() == other.hasEffectId());
      if (hasEffectId()) {
        result = result && (getEffectId()
            == other.getEffectId());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasFriendlyName() == other.hasFriendlyName());
      if (hasFriendlyName()) {
        result = result && getFriendlyName()
            .equals(other.getFriendlyName());
      }
      result = result && (hasRadius() == other.hasRadius());
      if (hasRadius()) {
        result = result && (
            java.lang.Float.floatToIntBits(getRadius())
            == java.lang.Float.floatToIntBits(
                other.getRadius()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectId()) {
        hash = (37 * hash) + EFFECT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEffectId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasFriendlyName()) {
        hash = (37 * hash) + FRIENDLY_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFriendlyName().hashCode();
      }
      if (hasRadius()) {
        hash = (37 * hash) + RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRadius());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SC2APIProtocol.Data.EffectData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.EffectData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.EffectData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SC2APIProtocol.Data.EffectData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SC2APIProtocol.Data.EffectData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC2APIProtocol.EffectData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC2APIProtocol.EffectData)
        SC2APIProtocol.Data.EffectDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_EffectData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_EffectData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SC2APIProtocol.Data.EffectData.class, SC2APIProtocol.Data.EffectData.Builder.class);
      }

      // Construct using SC2APIProtocol.Data.EffectData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        effectId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        friendlyName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        radius_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SC2APIProtocol.Data.internal_static_SC2APIProtocol_EffectData_descriptor;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.EffectData getDefaultInstanceForType() {
        return SC2APIProtocol.Data.EffectData.getDefaultInstance();
      }

      @java.lang.Override
      public SC2APIProtocol.Data.EffectData build() {
        SC2APIProtocol.Data.EffectData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SC2APIProtocol.Data.EffectData buildPartial() {
        SC2APIProtocol.Data.EffectData result = new SC2APIProtocol.Data.EffectData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.effectId_ = effectId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.friendlyName_ = friendlyName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.radius_ = radius_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SC2APIProtocol.Data.EffectData) {
          return mergeFrom((SC2APIProtocol.Data.EffectData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SC2APIProtocol.Data.EffectData other) {
        if (other == SC2APIProtocol.Data.EffectData.getDefaultInstance()) return this;
        if (other.hasEffectId()) {
          setEffectId(other.getEffectId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFriendlyName()) {
          bitField0_ |= 0x00000004;
          friendlyName_ = other.friendlyName_;
          onChanged();
        }
        if (other.hasRadius()) {
          setRadius(other.getRadius());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SC2APIProtocol.Data.EffectData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SC2APIProtocol.Data.EffectData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int effectId_ ;
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 effect_id = 1;</code>
       */
      public boolean hasEffectId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 effect_id = 1;</code>
       */
      public int getEffectId() {
        return effectId_;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 effect_id = 1;</code>
       */
      public Builder setEffectId(int value) {
        bitField0_ |= 0x00000001;
        effectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stable ID.
       * </pre>
       *
       * <code>optional uint32 effect_id = 1;</code>
       */
      public Builder clearEffectId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        effectId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object friendlyName_ = "";
      /**
       * <code>optional string friendly_name = 3;</code>
       */
      public boolean hasFriendlyName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string friendly_name = 3;</code>
       */
      public java.lang.String getFriendlyName() {
        java.lang.Object ref = friendlyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            friendlyName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string friendly_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFriendlyNameBytes() {
        java.lang.Object ref = friendlyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          friendlyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string friendly_name = 3;</code>
       */
      public Builder setFriendlyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        friendlyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string friendly_name = 3;</code>
       */
      public Builder clearFriendlyName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        friendlyName_ = getDefaultInstance().getFriendlyName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string friendly_name = 3;</code>
       */
      public Builder setFriendlyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        friendlyName_ = value;
        onChanged();
        return this;
      }

      private float radius_ ;
      /**
       * <code>optional float radius = 4;</code>
       */
      public boolean hasRadius() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float radius = 4;</code>
       */
      public float getRadius() {
        return radius_;
      }
      /**
       * <code>optional float radius = 4;</code>
       */
      public Builder setRadius(float value) {
        bitField0_ |= 0x00000008;
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float radius = 4;</code>
       */
      public Builder clearRadius() {
        bitField0_ = (bitField0_ & ~0x00000008);
        radius_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC2APIProtocol.EffectData)
    }

    // @@protoc_insertion_point(class_scope:SC2APIProtocol.EffectData)
    private static final SC2APIProtocol.Data.EffectData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SC2APIProtocol.Data.EffectData();
    }

    public static SC2APIProtocol.Data.EffectData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<EffectData>
        PARSER = new com.google.protobuf.AbstractParser<EffectData>() {
      @java.lang.Override
      public EffectData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EffectData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EffectData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EffectData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SC2APIProtocol.Data.EffectData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_AbilityData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_AbilityData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_DamageBonus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_DamageBonus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_Weapon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_Weapon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_UnitTypeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_UnitTypeData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_UpgradeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_UpgradeData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_BuffData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_BuffData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC2APIProtocol_EffectData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC2APIProtocol_EffectData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033s2clientprotocol/data.proto\022\016SC2APIPro" +
      "tocol\032\035s2clientprotocol/common.proto\"\304\003\n" +
      "\013AbilityData\022\022\n\nability_id\030\001 \001(\r\022\021\n\tlink" +
      "_name\030\002 \001(\t\022\022\n\nlink_index\030\003 \001(\r\022\023\n\013butto" +
      "n_name\030\004 \001(\t\022\025\n\rfriendly_name\030\005 \001(\t\022\016\n\006h" +
      "otkey\030\006 \001(\t\022\034\n\024remaps_to_ability_id\030\007 \001(" +
      "\r\022\021\n\tavailable\030\010 \001(\010\0222\n\006target\030\t \001(\0162\".S" +
      "C2APIProtocol.AbilityData.Target\022\025\n\rallo" +
      "w_minimap\030\n \001(\010\022\026\n\016allow_autocast\030\013 \001(\010\022" +
      "\023\n\013is_building\030\014 \001(\010\022\030\n\020footprint_radius" +
      "\030\r \001(\002\022\034\n\024is_instant_placement\030\016 \001(\010\022\022\n\n" +
      "cast_range\030\017 \001(\002\"I\n\006Target\022\010\n\004None\020\001\022\t\n\005" +
      "Point\020\002\022\010\n\004Unit\020\003\022\017\n\013PointOrUnit\020\004\022\017\n\013Po" +
      "intOrNone\020\005\"J\n\013DamageBonus\022,\n\tattribute\030" +
      "\001 \001(\0162\031.SC2APIProtocol.Attribute\022\r\n\005bonu" +
      "s\030\002 \001(\002\"\327\001\n\006Weapon\022/\n\004type\030\001 \001(\0162!.SC2AP" +
      "IProtocol.Weapon.TargetType\022\016\n\006damage\030\002 " +
      "\001(\002\0221\n\014damage_bonus\030\003 \003(\0132\033.SC2APIProtoc" +
      "ol.DamageBonus\022\017\n\007attacks\030\004 \001(\r\022\r\n\005range" +
      "\030\005 \001(\002\022\r\n\005speed\030\006 \001(\002\"*\n\nTargetType\022\n\n\006G" +
      "round\020\001\022\007\n\003Air\020\002\022\007\n\003Any\020\003\"\225\004\n\014UnitTypeDa" +
      "ta\022\017\n\007unit_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\021\n\tava" +
      "ilable\030\003 \001(\010\022\022\n\ncargo_size\030\004 \001(\r\022\024\n\014mine" +
      "ral_cost\030\014 \001(\r\022\024\n\014vespene_cost\030\r \001(\r\022\025\n\r" +
      "food_required\030\016 \001(\002\022\025\n\rfood_provided\030\022 \001" +
      "(\002\022\022\n\nability_id\030\017 \001(\r\022\"\n\004race\030\020 \001(\0162\024.S" +
      "C2APIProtocol.Race\022\022\n\nbuild_time\030\021 \001(\002\022\023" +
      "\n\013has_vespene\030\023 \001(\010\022\024\n\014has_minerals\030\024 \001(" +
      "\010\022\023\n\013sight_range\030\031 \001(\002\022\022\n\ntech_alias\030\025 \003" +
      "(\r\022\022\n\nunit_alias\030\026 \001(\r\022\030\n\020tech_requireme" +
      "nt\030\027 \001(\r\022\030\n\020require_attached\030\030 \001(\010\022-\n\nat" +
      "tributes\030\010 \003(\0162\031.SC2APIProtocol.Attribut" +
      "e\022\026\n\016movement_speed\030\t \001(\002\022\r\n\005armor\030\n \001(\002" +
      "\022\'\n\007weapons\030\013 \003(\0132\026.SC2APIProtocol.Weapo" +
      "n\"\206\001\n\013UpgradeData\022\022\n\nupgrade_id\030\001 \001(\r\022\014\n" +
      "\004name\030\002 \001(\t\022\024\n\014mineral_cost\030\003 \001(\r\022\024\n\014ves" +
      "pene_cost\030\004 \001(\r\022\025\n\rresearch_time\030\005 \001(\002\022\022" +
      "\n\nability_id\030\006 \001(\r\")\n\010BuffData\022\017\n\007buff_i" +
      "d\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\"T\n\nEffectData\022\021\n\te" +
      "ffect_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\025\n\rfriendly" +
      "_name\030\003 \001(\t\022\016\n\006radius\030\004 \001(\002*\236\001\n\tAttribut" +
      "e\022\t\n\005Light\020\001\022\013\n\007Armored\020\002\022\016\n\nBiological\020" +
      "\003\022\016\n\nMechanical\020\004\022\013\n\007Robotic\020\005\022\013\n\007Psioni" +
      "c\020\006\022\013\n\007Massive\020\007\022\r\n\tStructure\020\010\022\t\n\005Hover" +
      "\020\t\022\n\n\006Heroic\020\n\022\014\n\010Summoned\020\013"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SC2APIProtocol.Common.getDescriptor(),
        }, assigner);
    internal_static_SC2APIProtocol_AbilityData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SC2APIProtocol_AbilityData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_AbilityData_descriptor,
        new java.lang.String[] { "AbilityId", "LinkName", "LinkIndex", "ButtonName", "FriendlyName", "Hotkey", "RemapsToAbilityId", "Available", "Target", "AllowMinimap", "AllowAutocast", "IsBuilding", "FootprintRadius", "IsInstantPlacement", "CastRange", });
    internal_static_SC2APIProtocol_DamageBonus_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SC2APIProtocol_DamageBonus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_DamageBonus_descriptor,
        new java.lang.String[] { "Attribute", "Bonus", });
    internal_static_SC2APIProtocol_Weapon_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SC2APIProtocol_Weapon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_Weapon_descriptor,
        new java.lang.String[] { "Type", "Damage", "DamageBonus", "Attacks", "Range", "Speed", });
    internal_static_SC2APIProtocol_UnitTypeData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SC2APIProtocol_UnitTypeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_UnitTypeData_descriptor,
        new java.lang.String[] { "UnitId", "Name", "Available", "CargoSize", "MineralCost", "VespeneCost", "FoodRequired", "FoodProvided", "AbilityId", "Race", "BuildTime", "HasVespene", "HasMinerals", "SightRange", "TechAlias", "UnitAlias", "TechRequirement", "RequireAttached", "Attributes", "MovementSpeed", "Armor", "Weapons", });
    internal_static_SC2APIProtocol_UpgradeData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SC2APIProtocol_UpgradeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_UpgradeData_descriptor,
        new java.lang.String[] { "UpgradeId", "Name", "MineralCost", "VespeneCost", "ResearchTime", "AbilityId", });
    internal_static_SC2APIProtocol_BuffData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_SC2APIProtocol_BuffData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_BuffData_descriptor,
        new java.lang.String[] { "BuffId", "Name", });
    internal_static_SC2APIProtocol_EffectData_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SC2APIProtocol_EffectData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC2APIProtocol_EffectData_descriptor,
        new java.lang.String[] { "EffectId", "Name", "FriendlyName", "Radius", });
    SC2APIProtocol.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
